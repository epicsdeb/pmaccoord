From 91ea1d8bab5e81168aaaf2df7abd39ba7b7a442a Mon Sep 17 00:00:00 2001
From: Daron Chabot <chabot@frib.msu.edu>
Date: Tue, 11 Apr 2017 10:11:14 -0400
Subject: [PATCH 3/3] BLD: install db templates

---
 pmacCoordApp/Db/2jack.db                  | 104 +++++++++++
 pmacCoordApp/Db/2jack.vdb                 | 104 -----------
 pmacCoordApp/Db/3jack.db                  | 215 +++++++++++++++++++++++
 pmacCoordApp/Db/3jack.vdb                 | 215 -----------------------
 pmacCoordApp/Db/3jack_mirror.db           | 281 ++++++++++++++++++++++++++++++
 pmacCoordApp/Db/3jack_mirror.vdb          | 281 ------------------------------
 pmacCoordApp/Db/B22_optics_box.db         | 102 +++++++++++
 pmacCoordApp/Db/B22_optics_box.vdb        | 102 -----------
 pmacCoordApp/Db/IDT_sagital_dcm.db        |  76 ++++++++
 pmacCoordApp/Db/IDT_sagital_dcm.vdb       |  76 --------
 pmacCoordApp/Db/Makefile                  |  30 ++--
 pmacCoordApp/Db/accel_dcm.db              |  76 ++++++++
 pmacCoordApp/Db/accel_dcm.vdb             |  76 --------
 pmacCoordApp/Db/aperture_slits.db         |  78 +++++++++
 pmacCoordApp/Db/aperture_slits.vdb        |  78 ---------
 pmacCoordApp/Db/bender.db                 |  98 +++++++++++
 pmacCoordApp/Db/bender.vdb                |  98 -----------
 pmacCoordApp/Db/blade_slits.db            |  55 ++++++
 pmacCoordApp/Db/blade_slits.vdb           |  55 ------
 pmacCoordApp/Db/flexure_slits.db          |  63 +++++++
 pmacCoordApp/Db/flexure_slits.vdb         |  63 -------
 pmacCoordApp/Db/gap_and_centre_slits.db   |  46 +++++
 pmacCoordApp/Db/gap_and_centre_slits.vdb  |  46 -----
 pmacCoordApp/Db/pmacVariableWriteSync.db  |  75 ++++++++
 pmacCoordApp/Db/pmacVariableWriteSync.vdb |  75 --------
 pmacCoordApp/Db/qcm.db                    | 257 +++++++++++++++++++++++++++
 pmacCoordApp/Db/qcm.vdb                   | 257 ---------------------------
 pmacCoordApp/Db/zform.db                  | 100 +++++++++++
 pmacCoordApp/Db/zform.vdb                 | 100 -----------
 29 files changed, 1641 insertions(+), 1641 deletions(-)
 create mode 100644 pmacCoordApp/Db/2jack.db
 delete mode 100644 pmacCoordApp/Db/2jack.vdb
 create mode 100644 pmacCoordApp/Db/3jack.db
 delete mode 100644 pmacCoordApp/Db/3jack.vdb
 create mode 100644 pmacCoordApp/Db/3jack_mirror.db
 delete mode 100644 pmacCoordApp/Db/3jack_mirror.vdb
 create mode 100644 pmacCoordApp/Db/B22_optics_box.db
 delete mode 100644 pmacCoordApp/Db/B22_optics_box.vdb
 create mode 100644 pmacCoordApp/Db/IDT_sagital_dcm.db
 delete mode 100644 pmacCoordApp/Db/IDT_sagital_dcm.vdb
 create mode 100644 pmacCoordApp/Db/accel_dcm.db
 delete mode 100644 pmacCoordApp/Db/accel_dcm.vdb
 create mode 100644 pmacCoordApp/Db/aperture_slits.db
 delete mode 100644 pmacCoordApp/Db/aperture_slits.vdb
 create mode 100644 pmacCoordApp/Db/bender.db
 delete mode 100644 pmacCoordApp/Db/bender.vdb
 create mode 100644 pmacCoordApp/Db/blade_slits.db
 delete mode 100644 pmacCoordApp/Db/blade_slits.vdb
 create mode 100644 pmacCoordApp/Db/flexure_slits.db
 delete mode 100644 pmacCoordApp/Db/flexure_slits.vdb
 create mode 100644 pmacCoordApp/Db/gap_and_centre_slits.db
 delete mode 100644 pmacCoordApp/Db/gap_and_centre_slits.vdb
 create mode 100644 pmacCoordApp/Db/pmacVariableWriteSync.db
 delete mode 100644 pmacCoordApp/Db/pmacVariableWriteSync.vdb
 create mode 100644 pmacCoordApp/Db/qcm.db
 delete mode 100644 pmacCoordApp/Db/qcm.vdb
 create mode 100644 pmacCoordApp/Db/zform.db
 delete mode 100644 pmacCoordApp/Db/zform.vdb

diff --git a/pmacCoordApp/Db/2jack.db b/pmacCoordApp/Db/2jack.db
new file mode 100644
index 0000000..5e40873
--- /dev/null
+++ b/pmacCoordApp/Db/2jack.db
@@ -0,0 +1,104 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a 2jack CS. It requires
+# # PROG10_CS_motion.pmc and an instantiation of CS_2jack.pmc with the variables 
+# # shown in the image below:
+# # \image html 2jack-help.png "Setup of 2 jack CS"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_CS2jack "here", with a pmc file containing 
+# # the CS definition available in iocs/CS2jack/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for a 
+# 2jack CS 
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, PREC, Precision to display variables
+# % macro, J1PV, Pv of real Jack1 motor, e.g. $(P):J1
+# % macro, J2PV, Pv of real Jack1 motor, e.g. $(P):J2
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, 2jack.edl, 2jack=$(P)
+# # This record will zero J1 and J2 when processed
+record(fanout, "$(P):ZERO") {
+  field(LNK1, "$(P):ZEROJ1")
+  field(LNK2, "$(P):ZEROJ2")
+}
+
+record(calcout, "$(P):ZEROJ1") {
+  field(CALC, "-A")
+  field(INPA, "$(J1PV=$(P):J1).DRBV")
+  field(OUT, "$(J1PV=$(P):J1).OFF PP")
+}
+
+record(calcout, "$(P):ZEROJ2") {
+  field(CALC, "-A")
+  field(INPA, "$(J2PV=$(P):J2).DRBV")
+  field(OUT, "$(J2PV=$(P):J2).OFF PP")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":DIST")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
+  macro(VAR, "&$(COORD)Q21")
+  macro(Q, ":PIVOT")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
+  macro(VAR, "&$(COORD)Q22")
+  macro(Q, ":DEPTH")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,0,1.0)
+#! Record("$(P):ZERO",200,296,0,0,"$(P):ZERO")
+#! Field("$(P):ZERO.LNK1",16777215,0,"$(P):ZERO.LNK1")
+#! Link("$(P):ZERO.LNK1","$(P):ZEROJ1")
+#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
+#! Link("$(P):ZERO.LNK2","$(P):ZEROJ2")
+#! Record("$(P):ZEROJ1",20,22,0,0,"$(P):ZEROJ1")
+#! Field("$(P):ZEROJ1.INPA",16777215,1,"$(P):ZEROJ1.INPA")
+#! Field("$(P):ZEROJ1.OUT",16777215,1,"$(P):ZEROJ1.OUT")
+#! Record("$(P):ZEROJ2",260,22,0,1,"$(P):ZEROJ2")
+#! Field("$(P):ZEROJ2.INPA",16777215,1,"$(P):ZEROJ2.INPA")
+#! Field("$(P):ZEROJ2.OUT",16777215,1,"$(P):ZEROJ2.OUT")
+
+#! TemplateInstance("pmacVariableWriteSync1",200,380,0,"")
+#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync2",420,380,0,"")
+#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync3",640,380,0,"")
+#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/2jack.vdb b/pmacCoordApp/Db/2jack.vdb
deleted file mode 100644
index 5e40873..0000000
--- a/pmacCoordApp/Db/2jack.vdb
+++ /dev/null
@@ -1,104 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a 2jack CS. It requires
-# # PROG10_CS_motion.pmc and an instantiation of CS_2jack.pmc with the variables 
-# # shown in the image below:
-# # \image html 2jack-help.png "Setup of 2 jack CS"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_CS2jack "here", with a pmc file containing 
-# # the CS definition available in iocs/CS2jack/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for a 
-# 2jack CS 
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, PREC, Precision to display variables
-# % macro, J1PV, Pv of real Jack1 motor, e.g. $(P):J1
-# % macro, J2PV, Pv of real Jack1 motor, e.g. $(P):J2
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, 2jack.edl, 2jack=$(P)
-# # This record will zero J1 and J2 when processed
-record(fanout, "$(P):ZERO") {
-  field(LNK1, "$(P):ZEROJ1")
-  field(LNK2, "$(P):ZEROJ2")
-}
-
-record(calcout, "$(P):ZEROJ1") {
-  field(CALC, "-A")
-  field(INPA, "$(J1PV=$(P):J1).DRBV")
-  field(OUT, "$(J1PV=$(P):J1).OFF PP")
-}
-
-record(calcout, "$(P):ZEROJ2") {
-  field(CALC, "-A")
-  field(INPA, "$(J2PV=$(P):J2).DRBV")
-  field(OUT, "$(J2PV=$(P):J2).OFF PP")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":DIST")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
-  macro(VAR, "&$(COORD)Q21")
-  macro(Q, ":PIVOT")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
-  macro(VAR, "&$(COORD)Q22")
-  macro(Q, ":DEPTH")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,0,1.0)
-#! Record("$(P):ZERO",200,296,0,0,"$(P):ZERO")
-#! Field("$(P):ZERO.LNK1",16777215,0,"$(P):ZERO.LNK1")
-#! Link("$(P):ZERO.LNK1","$(P):ZEROJ1")
-#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
-#! Link("$(P):ZERO.LNK2","$(P):ZEROJ2")
-#! Record("$(P):ZEROJ1",20,22,0,0,"$(P):ZEROJ1")
-#! Field("$(P):ZEROJ1.INPA",16777215,1,"$(P):ZEROJ1.INPA")
-#! Field("$(P):ZEROJ1.OUT",16777215,1,"$(P):ZEROJ1.OUT")
-#! Record("$(P):ZEROJ2",260,22,0,1,"$(P):ZEROJ2")
-#! Field("$(P):ZEROJ2.INPA",16777215,1,"$(P):ZEROJ2.INPA")
-#! Field("$(P):ZEROJ2.OUT",16777215,1,"$(P):ZEROJ2.OUT")
-
-#! TemplateInstance("pmacVariableWriteSync1",200,380,0,"")
-#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync2",420,380,0,"")
-#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync3",640,380,0,"")
-#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
-
diff --git a/pmacCoordApp/Db/3jack.db b/pmacCoordApp/Db/3jack.db
new file mode 100644
index 0000000..77edb8e
--- /dev/null
+++ b/pmacCoordApp/Db/3jack.db
@@ -0,0 +1,215 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a 3jack CS. The 3 jacks can
+# # be constructed in any geometry, and should be numbered in a clockwise order 
+# # looking from the top with J1 having the smallest Z value of the jacks
+# # It requires PROG10_CS_motion.pmc and an instantiation of CS_3jack.pmc with 
+# # the variables shown in the image below:
+# # \image html 3jack-help.png "Setup of 3 jack CS"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_CS3jack "here", with a pmc file containing 
+# # the CS definition available in iocs/CS3jack/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for a 
+# 3jack CS 
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, PREC, Precision to display variables
+# % macro, J1PV, Pv of real Jack1 motor, e.g. $(P):J1
+# % macro, J2PV, Pv of real Jack1 motor, e.g. $(P):J2
+# % macro, J3PV, Pv of real Jack1 motor, e.g. $(P):J3
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, 3jack.edl, 3jack=$(P)
+# # This record will zero J1, J2 and J3 when processed
+record(fanout, "$(P):ZERO") {
+  field(LNK1, "$(P):ZEROJ1")
+  field(LNK2, "$(P):ZEROJ2")
+  field(LNK3, "$(P):ZEROJ3")
+}
+
+record(calcout, "$(P):ZEROJ1") {
+  field(CALC, "-A")
+  field(INPA, "$(J1PV=$(P):J1).DRBV")
+  field(OUT, "$(J1PV=$(P):J1).OFF PP")
+}
+
+record(calcout, "$(P):ZEROJ2") {
+  field(CALC, "-A")
+  field(INPA, "$(J2PV=$(P):J2).DRBV")
+  field(OUT, "$(J2PV=$(P):J2).OFF PP")
+}
+
+record(calcout, "$(P):ZEROJ3") {
+  field(CALC, "-A")
+  field(INPA, "$(J3PV=$(P):J3).DRBV")
+  field(OUT, "$(J3PV=$(P):J3).OFF PP")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":J1X")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
+  macro(VAR, "&$(COORD)Q21")
+  macro(Q, ":J1Z")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
+  macro(VAR, "&$(COORD)Q22")
+  macro(Q, ":J2X")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync4) {
+  macro(VAR, "&$(COORD)Q23")
+  macro(Q, ":J2Z")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync5) {
+  macro(VAR, "&$(COORD)Q24")
+  macro(Q, ":J3X")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync6) {
+  macro(VAR, "&$(COORD)Q25")
+  macro(Q, ":J3Z")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync11) {
+  macro(VAR, "&$(COORD)Q30")
+  macro(Q, ":MD")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync12) {
+  macro(VAR, "&$(COORD)Q31")
+  macro(Q, ":MCX")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync13) {
+  macro(VAR, "&$(COORD)Q32")
+  macro(Q, ":MCZ")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(175,553,1.0)
+#! Record("$(P):ZERO",220,702,0,0,"$(P):ZERO")
+#! Field("$(P):ZERO.LNK1",16777215,1,"$(P):ZERO.LNK1")
+#! Link("$(P):ZERO.LNK1","$(P):ZEROJ1")
+#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
+#! Link("$(P):ZERO.LNK2","$(P):ZEROJ2")
+#! Field("$(P):ZERO.LNK3",16777215,1,"$(P):ZERO.LNK3")
+#! Link("$(P):ZERO.LNK3","$(P):ZEROJ3")
+#! Record("$(P):ZEROJ1",520,702,0,0,"$(P):ZEROJ1")
+#! Field("$(P):ZEROJ1.INPA",16777215,1,"$(P):ZEROJ1.INPA")
+#! Field("$(P):ZEROJ1.OUT",16777215,1,"$(P):ZEROJ1.OUT")
+#! Record("$(P):ZEROJ2",520,862,0,0,"$(P):ZEROJ2")
+#! Field("$(P):ZEROJ2.INPA",16777215,1,"$(P):ZEROJ2.INPA")
+#! Field("$(P):ZEROJ2.OUT",16777215,1,"$(P):ZEROJ2.OUT")
+#! Record("$(P):ZEROJ3",500,1022,0,0,"$(P):ZEROJ3")
+#! Field("$(P):ZEROJ3.INPA",16777215,1,"$(P):ZEROJ3.INPA")
+#! Field("$(P):ZEROJ3.OUT",16777215,1,"$(P):ZEROJ3.OUT")
+
+#! TemplateInstance("pmacVariableWriteSync1",740,580,0,"")
+#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync2",960,580,0,"")
+#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync3",1180,580,0,"")
+#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync4",1400,580,0,"")
+#! TemplateField("pmacVariableWriteSync4","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync5",1620,580,0,"")
+#! TemplateField("pmacVariableWriteSync5","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync6",740,920,0,"")
+#! TemplateField("pmacVariableWriteSync6","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync11",740,1260,0,"")
+#! TemplateField("pmacVariableWriteSync11","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync12",960,1260,0,"")
+#! TemplateField("pmacVariableWriteSync12","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync13",1180,1260,0,"")
+#! TemplateField("pmacVariableWriteSync13","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/3jack.vdb b/pmacCoordApp/Db/3jack.vdb
deleted file mode 100644
index 77edb8e..0000000
--- a/pmacCoordApp/Db/3jack.vdb
+++ /dev/null
@@ -1,215 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a 3jack CS. The 3 jacks can
-# # be constructed in any geometry, and should be numbered in a clockwise order 
-# # looking from the top with J1 having the smallest Z value of the jacks
-# # It requires PROG10_CS_motion.pmc and an instantiation of CS_3jack.pmc with 
-# # the variables shown in the image below:
-# # \image html 3jack-help.png "Setup of 3 jack CS"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_CS3jack "here", with a pmc file containing 
-# # the CS definition available in iocs/CS3jack/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for a 
-# 3jack CS 
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, PREC, Precision to display variables
-# % macro, J1PV, Pv of real Jack1 motor, e.g. $(P):J1
-# % macro, J2PV, Pv of real Jack1 motor, e.g. $(P):J2
-# % macro, J3PV, Pv of real Jack1 motor, e.g. $(P):J3
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, 3jack.edl, 3jack=$(P)
-# # This record will zero J1, J2 and J3 when processed
-record(fanout, "$(P):ZERO") {
-  field(LNK1, "$(P):ZEROJ1")
-  field(LNK2, "$(P):ZEROJ2")
-  field(LNK3, "$(P):ZEROJ3")
-}
-
-record(calcout, "$(P):ZEROJ1") {
-  field(CALC, "-A")
-  field(INPA, "$(J1PV=$(P):J1).DRBV")
-  field(OUT, "$(J1PV=$(P):J1).OFF PP")
-}
-
-record(calcout, "$(P):ZEROJ2") {
-  field(CALC, "-A")
-  field(INPA, "$(J2PV=$(P):J2).DRBV")
-  field(OUT, "$(J2PV=$(P):J2).OFF PP")
-}
-
-record(calcout, "$(P):ZEROJ3") {
-  field(CALC, "-A")
-  field(INPA, "$(J3PV=$(P):J3).DRBV")
-  field(OUT, "$(J3PV=$(P):J3).OFF PP")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":J1X")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
-  macro(VAR, "&$(COORD)Q21")
-  macro(Q, ":J1Z")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
-  macro(VAR, "&$(COORD)Q22")
-  macro(Q, ":J2X")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync4) {
-  macro(VAR, "&$(COORD)Q23")
-  macro(Q, ":J2Z")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync5) {
-  macro(VAR, "&$(COORD)Q24")
-  macro(Q, ":J3X")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync6) {
-  macro(VAR, "&$(COORD)Q25")
-  macro(Q, ":J3Z")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync11) {
-  macro(VAR, "&$(COORD)Q30")
-  macro(Q, ":MD")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync12) {
-  macro(VAR, "&$(COORD)Q31")
-  macro(Q, ":MCX")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync13) {
-  macro(VAR, "&$(COORD)Q32")
-  macro(Q, ":MCZ")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(175,553,1.0)
-#! Record("$(P):ZERO",220,702,0,0,"$(P):ZERO")
-#! Field("$(P):ZERO.LNK1",16777215,1,"$(P):ZERO.LNK1")
-#! Link("$(P):ZERO.LNK1","$(P):ZEROJ1")
-#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
-#! Link("$(P):ZERO.LNK2","$(P):ZEROJ2")
-#! Field("$(P):ZERO.LNK3",16777215,1,"$(P):ZERO.LNK3")
-#! Link("$(P):ZERO.LNK3","$(P):ZEROJ3")
-#! Record("$(P):ZEROJ1",520,702,0,0,"$(P):ZEROJ1")
-#! Field("$(P):ZEROJ1.INPA",16777215,1,"$(P):ZEROJ1.INPA")
-#! Field("$(P):ZEROJ1.OUT",16777215,1,"$(P):ZEROJ1.OUT")
-#! Record("$(P):ZEROJ2",520,862,0,0,"$(P):ZEROJ2")
-#! Field("$(P):ZEROJ2.INPA",16777215,1,"$(P):ZEROJ2.INPA")
-#! Field("$(P):ZEROJ2.OUT",16777215,1,"$(P):ZEROJ2.OUT")
-#! Record("$(P):ZEROJ3",500,1022,0,0,"$(P):ZEROJ3")
-#! Field("$(P):ZEROJ3.INPA",16777215,1,"$(P):ZEROJ3.INPA")
-#! Field("$(P):ZEROJ3.OUT",16777215,1,"$(P):ZEROJ3.OUT")
-
-#! TemplateInstance("pmacVariableWriteSync1",740,580,0,"")
-#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync2",960,580,0,"")
-#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync3",1180,580,0,"")
-#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync4",1400,580,0,"")
-#! TemplateField("pmacVariableWriteSync4","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync5",1620,580,0,"")
-#! TemplateField("pmacVariableWriteSync5","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync6",740,920,0,"")
-#! TemplateField("pmacVariableWriteSync6","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync11",740,1260,0,"")
-#! TemplateField("pmacVariableWriteSync11","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync12",960,1260,0,"")
-#! TemplateField("pmacVariableWriteSync12","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync13",1180,1260,0,"")
-#! TemplateField("pmacVariableWriteSync13","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","PREC",16777215,0,1)
-
diff --git a/pmacCoordApp/Db/3jack_mirror.db b/pmacCoordApp/Db/3jack_mirror.db
new file mode 100644
index 0000000..97b84b2
--- /dev/null
+++ b/pmacCoordApp/Db/3jack_mirror.db
@@ -0,0 +1,281 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a 3jack CS with an angled 
+# # mirror mount on top. The 3 jacks can be constructed in any geometry, and 
+# # should be numbered in a clockwise order looking from the top with J1 having 
+# # the smallest Z value of the jacks. It requires PROG10_CS_motion.pmc and an 
+# # instantiation of CS_3jack_mirror.pmc with the variables shown in the image 
+# # below:
+# # \image html 3jack_mirror-help.png "Setup of 3 jack with mirror CS"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_CS3jack_mirror "here", with a pmc file containing 
+# # the CS definition available in iocs/CS3jack_mirror/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for a 
+# 3jack mirror CS 
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, PREC, Precision to display variables
+# % macro, AEGU, EGU for angular variables
+# % macro, J1PV, Pv of real Jack1 motor, e.g. $(P):J1
+# % macro, J2PV, Pv of real Jack1 motor, e.g. $(P):J2
+# % macro, J3PV, Pv of real Jack1 motor, e.g. $(P):J3
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, 3jack_mirror.edl, 3jack=$(P)
+# # This record will zero J1, J2 and J3 when processed
+record(fanout, "$(P):ZERO") {
+  field(LNK1, "$(P):ZEROJ1")
+  field(LNK2, "$(P):ZEROJ2")
+  field(LNK3, "$(P):ZEROJ3")
+}
+
+record(calcout, "$(P):ZEROJ1") {
+  field(CALC, "-A")
+  field(INPA, "$(J1PV=$(P):J1).DRBV")
+  field(OUT, "$(J1PV=$(P):J1).OFF PP")
+}
+
+record(calcout, "$(P):ZEROJ2") {
+  field(CALC, "-A")
+  field(INPA, "$(J2PV=$(P):J2).DRBV")
+  field(OUT, "$(J2PV=$(P):J2).OFF PP")
+}
+
+record(calcout, "$(P):ZEROJ3") {
+  field(CALC, "-A")
+  field(INPA, "$(J3PV=$(P):J3).DRBV")
+  field(OUT, "$(J3PV=$(P):J3).OFF PP")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":J1X")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
+  macro(VAR, "&$(COORD)Q21")
+  macro(Q, ":J1Z")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
+  macro(VAR, "&$(COORD)Q22")
+  macro(Q, ":J2X")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync4) {
+  macro(VAR, "&$(COORD)Q23")
+  macro(Q, ":J2Z")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync5) {
+  macro(VAR, "&$(COORD)Q24")
+  macro(Q, ":J3X")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync6) {
+  macro(VAR, "&$(COORD)Q25")
+  macro(Q, ":J3Z")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync7) {
+  macro(VAR, "&$(COORD)Q26")
+  macro(Q, ":JTX")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync8) {
+  macro(VAR, "&$(COORD)Q27")
+  macro(Q, ":JTZ")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync9) {
+  macro(VAR, "&$(COORD)Q28")
+  macro(Q, ":MP")
+  macro(EGU, "$(AEGU=deg)")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync10) {
+  macro(VAR, "&$(COORD)Q29")
+  macro(Q, ":MR")
+  macro(EGU, "$(AEGU=deg)")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync11) {
+  macro(VAR, "&$(COORD)Q30")
+  macro(Q, ":MD")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync12) {
+  macro(VAR, "&$(COORD)Q31")
+  macro(Q, ":MCX")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync13) {
+  macro(VAR, "&$(COORD)Q32")
+  macro(Q, ":MCZ")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(175,553,1.0)
+#! Record("$(P):ZERO",220,702,0,0,"$(P):ZERO")
+#! Field("$(P):ZERO.LNK1",16777215,1,"$(P):ZERO.LNK1")
+#! Link("$(P):ZERO.LNK1","$(P):ZEROJ1")
+#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
+#! Link("$(P):ZERO.LNK2","$(P):ZEROJ2")
+#! Field("$(P):ZERO.LNK3",16777215,1,"$(P):ZERO.LNK3")
+#! Link("$(P):ZERO.LNK3","$(P):ZEROJ3")
+#! Record("$(P):ZEROJ1",520,702,0,0,"$(P):ZEROJ1")
+#! Field("$(P):ZEROJ1.INPA",16777215,1,"$(P):ZEROJ1.INPA")
+#! Field("$(P):ZEROJ1.OUT",16777215,1,"$(P):ZEROJ1.OUT")
+#! Record("$(P):ZEROJ2",520,862,0,0,"$(P):ZEROJ2")
+#! Field("$(P):ZEROJ2.INPA",16777215,1,"$(P):ZEROJ2.INPA")
+#! Field("$(P):ZEROJ2.OUT",16777215,1,"$(P):ZEROJ2.OUT")
+#! Record("$(P):ZEROJ3",500,1022,0,0,"$(P):ZEROJ3")
+#! Field("$(P):ZEROJ3.INPA",16777215,1,"$(P):ZEROJ3.INPA")
+#! Field("$(P):ZEROJ3.OUT",16777215,1,"$(P):ZEROJ3.OUT")
+
+#! TemplateInstance("pmacVariableWriteSync1",740,580,0,"")
+#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync2",960,580,0,"")
+#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync3",1180,580,0,"")
+#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync4",1400,580,0,"")
+#! TemplateField("pmacVariableWriteSync4","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync5",1620,580,0,"")
+#! TemplateField("pmacVariableWriteSync5","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync6",740,920,0,"")
+#! TemplateField("pmacVariableWriteSync6","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync6","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync7",960,920,0,"")
+#! TemplateField("pmacVariableWriteSync7","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync7","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync7","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync7","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync7","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync7","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync8",1180,920,0,"")
+#! TemplateField("pmacVariableWriteSync8","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync8","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync8","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync8","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync8","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync8","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync9",1400,920,0,"")
+#! TemplateField("pmacVariableWriteSync9","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync9","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync9","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync9","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync9","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync9","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync10",1620,920,0,"")
+#! TemplateField("pmacVariableWriteSync10","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync10","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync10","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync10","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync10","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync10","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync11",740,1260,0,"")
+#! TemplateField("pmacVariableWriteSync11","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync11","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync12",960,1260,0,"")
+#! TemplateField("pmacVariableWriteSync12","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync12","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync13",1180,1260,0,"")
+#! TemplateField("pmacVariableWriteSync13","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync13","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/3jack_mirror.vdb b/pmacCoordApp/Db/3jack_mirror.vdb
deleted file mode 100644
index 97b84b2..0000000
--- a/pmacCoordApp/Db/3jack_mirror.vdb
+++ /dev/null
@@ -1,281 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a 3jack CS with an angled 
-# # mirror mount on top. The 3 jacks can be constructed in any geometry, and 
-# # should be numbered in a clockwise order looking from the top with J1 having 
-# # the smallest Z value of the jacks. It requires PROG10_CS_motion.pmc and an 
-# # instantiation of CS_3jack_mirror.pmc with the variables shown in the image 
-# # below:
-# # \image html 3jack_mirror-help.png "Setup of 3 jack with mirror CS"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_CS3jack_mirror "here", with a pmc file containing 
-# # the CS definition available in iocs/CS3jack_mirror/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for a 
-# 3jack mirror CS 
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, PREC, Precision to display variables
-# % macro, AEGU, EGU for angular variables
-# % macro, J1PV, Pv of real Jack1 motor, e.g. $(P):J1
-# % macro, J2PV, Pv of real Jack1 motor, e.g. $(P):J2
-# % macro, J3PV, Pv of real Jack1 motor, e.g. $(P):J3
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, 3jack_mirror.edl, 3jack=$(P)
-# # This record will zero J1, J2 and J3 when processed
-record(fanout, "$(P):ZERO") {
-  field(LNK1, "$(P):ZEROJ1")
-  field(LNK2, "$(P):ZEROJ2")
-  field(LNK3, "$(P):ZEROJ3")
-}
-
-record(calcout, "$(P):ZEROJ1") {
-  field(CALC, "-A")
-  field(INPA, "$(J1PV=$(P):J1).DRBV")
-  field(OUT, "$(J1PV=$(P):J1).OFF PP")
-}
-
-record(calcout, "$(P):ZEROJ2") {
-  field(CALC, "-A")
-  field(INPA, "$(J2PV=$(P):J2).DRBV")
-  field(OUT, "$(J2PV=$(P):J2).OFF PP")
-}
-
-record(calcout, "$(P):ZEROJ3") {
-  field(CALC, "-A")
-  field(INPA, "$(J3PV=$(P):J3).DRBV")
-  field(OUT, "$(J3PV=$(P):J3).OFF PP")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":J1X")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
-  macro(VAR, "&$(COORD)Q21")
-  macro(Q, ":J1Z")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
-  macro(VAR, "&$(COORD)Q22")
-  macro(Q, ":J2X")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync4) {
-  macro(VAR, "&$(COORD)Q23")
-  macro(Q, ":J2Z")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync5) {
-  macro(VAR, "&$(COORD)Q24")
-  macro(Q, ":J3X")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync6) {
-  macro(VAR, "&$(COORD)Q25")
-  macro(Q, ":J3Z")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync7) {
-  macro(VAR, "&$(COORD)Q26")
-  macro(Q, ":JTX")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync8) {
-  macro(VAR, "&$(COORD)Q27")
-  macro(Q, ":JTZ")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync9) {
-  macro(VAR, "&$(COORD)Q28")
-  macro(Q, ":MP")
-  macro(EGU, "$(AEGU=deg)")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync10) {
-  macro(VAR, "&$(COORD)Q29")
-  macro(Q, ":MR")
-  macro(EGU, "$(AEGU=deg)")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync11) {
-  macro(VAR, "&$(COORD)Q30")
-  macro(Q, ":MD")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync12) {
-  macro(VAR, "&$(COORD)Q31")
-  macro(Q, ":MCX")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync13) {
-  macro(VAR, "&$(COORD)Q32")
-  macro(Q, ":MCZ")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(175,553,1.0)
-#! Record("$(P):ZERO",220,702,0,0,"$(P):ZERO")
-#! Field("$(P):ZERO.LNK1",16777215,1,"$(P):ZERO.LNK1")
-#! Link("$(P):ZERO.LNK1","$(P):ZEROJ1")
-#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
-#! Link("$(P):ZERO.LNK2","$(P):ZEROJ2")
-#! Field("$(P):ZERO.LNK3",16777215,1,"$(P):ZERO.LNK3")
-#! Link("$(P):ZERO.LNK3","$(P):ZEROJ3")
-#! Record("$(P):ZEROJ1",520,702,0,0,"$(P):ZEROJ1")
-#! Field("$(P):ZEROJ1.INPA",16777215,1,"$(P):ZEROJ1.INPA")
-#! Field("$(P):ZEROJ1.OUT",16777215,1,"$(P):ZEROJ1.OUT")
-#! Record("$(P):ZEROJ2",520,862,0,0,"$(P):ZEROJ2")
-#! Field("$(P):ZEROJ2.INPA",16777215,1,"$(P):ZEROJ2.INPA")
-#! Field("$(P):ZEROJ2.OUT",16777215,1,"$(P):ZEROJ2.OUT")
-#! Record("$(P):ZEROJ3",500,1022,0,0,"$(P):ZEROJ3")
-#! Field("$(P):ZEROJ3.INPA",16777215,1,"$(P):ZEROJ3.INPA")
-#! Field("$(P):ZEROJ3.OUT",16777215,1,"$(P):ZEROJ3.OUT")
-
-#! TemplateInstance("pmacVariableWriteSync1",740,580,0,"")
-#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync2",960,580,0,"")
-#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync3",1180,580,0,"")
-#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync4",1400,580,0,"")
-#! TemplateField("pmacVariableWriteSync4","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync5",1620,580,0,"")
-#! TemplateField("pmacVariableWriteSync5","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync6",740,920,0,"")
-#! TemplateField("pmacVariableWriteSync6","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync6","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync7",960,920,0,"")
-#! TemplateField("pmacVariableWriteSync7","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync7","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync7","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync7","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync7","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync7","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync8",1180,920,0,"")
-#! TemplateField("pmacVariableWriteSync8","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync8","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync8","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync8","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync8","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync8","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync9",1400,920,0,"")
-#! TemplateField("pmacVariableWriteSync9","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync9","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync9","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync9","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync9","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync9","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync10",1620,920,0,"")
-#! TemplateField("pmacVariableWriteSync10","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync10","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync10","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync10","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync10","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync10","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync11",740,1260,0,"")
-#! TemplateField("pmacVariableWriteSync11","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync11","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync12",960,1260,0,"")
-#! TemplateField("pmacVariableWriteSync12","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync12","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync13",1180,1260,0,"")
-#! TemplateField("pmacVariableWriteSync13","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync13","PREC",16777215,0,1)
-
diff --git a/pmacCoordApp/Db/B22_optics_box.db b/pmacCoordApp/Db/B22_optics_box.db
new file mode 100644
index 0000000..306b9b9
--- /dev/null
+++ b/pmacCoordApp/Db/B22_optics_box.db
@@ -0,0 +1,102 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# % macro, __doc__, Supporting template that allows setting of variables for a 
+# B22 optics box CS 
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, PREC, Precision to display variables
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, B22_optics_box.edl, optics=$(P)
+# need this record so VDCT doesn't delete our comments
+record(stringout, "$(P):dummy") {
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":XM9")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
+  macro(VAR, "&$(COORD)Q21")
+  macro(Q, ":YM9")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
+  macro(VAR, "&$(COORD)Q22")
+  macro(Q, ":XM10")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync4) {
+  macro(VAR, "&$(COORD)Q23")
+  macro(Q, ":YM10")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync5) {
+  macro(VAR, "&$(COORD)Q24")
+  macro(Q, ":LM9M10")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,0,1.0)
+#! Record("$(P):dummy",20,23,0,0,"$(P):dummy")
+
+#! TemplateInstance("pmacVariableWriteSync",260,20,0,"")
+#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync2",500,20,0,"")
+#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync3",740,20,0,"")
+#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync4",980,20,0,"")
+#! TemplateField("pmacVariableWriteSync4","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync4","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync5",1220,20,0,"")
+#! TemplateField("pmacVariableWriteSync5","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync5","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/B22_optics_box.vdb b/pmacCoordApp/Db/B22_optics_box.vdb
deleted file mode 100644
index 306b9b9..0000000
--- a/pmacCoordApp/Db/B22_optics_box.vdb
+++ /dev/null
@@ -1,102 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# % macro, __doc__, Supporting template that allows setting of variables for a 
-# B22 optics box CS 
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, PREC, Precision to display variables
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, B22_optics_box.edl, optics=$(P)
-# need this record so VDCT doesn't delete our comments
-record(stringout, "$(P):dummy") {
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":XM9")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
-  macro(VAR, "&$(COORD)Q21")
-  macro(Q, ":YM9")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
-  macro(VAR, "&$(COORD)Q22")
-  macro(Q, ":XM10")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync4) {
-  macro(VAR, "&$(COORD)Q23")
-  macro(Q, ":YM10")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync5) {
-  macro(VAR, "&$(COORD)Q24")
-  macro(Q, ":LM9M10")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,0,1.0)
-#! Record("$(P):dummy",20,23,0,0,"$(P):dummy")
-
-#! TemplateInstance("pmacVariableWriteSync",260,20,0,"")
-#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync2",500,20,0,"")
-#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync3",740,20,0,"")
-#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync4",980,20,0,"")
-#! TemplateField("pmacVariableWriteSync4","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync4","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync5",1220,20,0,"")
-#! TemplateField("pmacVariableWriteSync5","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync5","PREC",16777215,0,1)
-
diff --git a/pmacCoordApp/Db/IDT_sagital_dcm.db b/pmacCoordApp/Db/IDT_sagital_dcm.db
new file mode 100644
index 0000000..9bf276f
--- /dev/null
+++ b/pmacCoordApp/Db/IDT_sagital_dcm.db
@@ -0,0 +1,76 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a bragg axis and vertical 
+# # translation geometry DCM CS. It requires PROG10_CS_motion.pmc and an 
+# # instantiation of CS_accel_dcm.pmc as illustrated in the image below:
+# # \image html accel_dcm-help.png "Setup of DCM CS"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_accelDCM "here", with a pmc file containing 
+# # the CS definition available in iocs/accelDCM/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for an 
+# accel DCM CS 
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, accel_dcm.edl, accel_dcm=$(P)
+record(stringout, "$(P):dummy") {
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":DSPACING")
+  macro(EGU, "A*")
+  macro(PREC, "5")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
+  macro(VAR, "&$(COORD)Q21")
+  macro(Q, ":LOCKT2")
+  macro(EGU, "")
+  macro(PREC, "0")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
+  macro(VAR, "&$(COORD)Q22")
+  macro(Q, ":EVLAMBDA")
+  macro(EGU, "")
+  macro(PREC, "5")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,0,1.0)
+#! Record("$(P):dummy",20,383,0,0,"$(P):dummy")
+
+#! TemplateInstance("pmacVariableWriteSync1",200,380,0,"")
+#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync2",420,380,0,"")
+#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync3",640,380,0,"")
+#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/IDT_sagital_dcm.vdb b/pmacCoordApp/Db/IDT_sagital_dcm.vdb
deleted file mode 100644
index 9bf276f..0000000
--- a/pmacCoordApp/Db/IDT_sagital_dcm.vdb
+++ /dev/null
@@ -1,76 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a bragg axis and vertical 
-# # translation geometry DCM CS. It requires PROG10_CS_motion.pmc and an 
-# # instantiation of CS_accel_dcm.pmc as illustrated in the image below:
-# # \image html accel_dcm-help.png "Setup of DCM CS"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_accelDCM "here", with a pmc file containing 
-# # the CS definition available in iocs/accelDCM/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for an 
-# accel DCM CS 
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, accel_dcm.edl, accel_dcm=$(P)
-record(stringout, "$(P):dummy") {
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":DSPACING")
-  macro(EGU, "A*")
-  macro(PREC, "5")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
-  macro(VAR, "&$(COORD)Q21")
-  macro(Q, ":LOCKT2")
-  macro(EGU, "")
-  macro(PREC, "0")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
-  macro(VAR, "&$(COORD)Q22")
-  macro(Q, ":EVLAMBDA")
-  macro(EGU, "")
-  macro(PREC, "5")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,0,1.0)
-#! Record("$(P):dummy",20,383,0,0,"$(P):dummy")
-
-#! TemplateInstance("pmacVariableWriteSync1",200,380,0,"")
-#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync2",420,380,0,"")
-#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync3",640,380,0,"")
-#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
-
diff --git a/pmacCoordApp/Db/Makefile b/pmacCoordApp/Db/Makefile
index 8edb186..d4057b3 100644
--- a/pmacCoordApp/Db/Makefile
+++ b/pmacCoordApp/Db/Makefile
@@ -11,21 +11,21 @@ include $(TOP)/configure/CONFIG
 # In a Diamond Support Module, install
 # templates like this
 #
-DB += accel_dcm.template
-DB += IDT_sagital_dcm.template
-DB += aperture_slits.template
-DB += bender.template
-DB += B22_optics_box.template
-DB += blade_slits.template
-DB += gap_and_centre_slits.template
-DB += flexure_slits.template
-DB += 2jack.template
-DB += 3jack.template
-DB += 3jack_mirror.template
-DB += qcm.template
-DB += motor_in_cs.template
-DB += pmacVariableWriteSync.template
-DB += zform.template
+DB += accel_dcm.db
+DB += IDT_sagital_dcm.db
+DB += aperture_slits.db
+DB += bender.db
+DB += B22_optics_box.db
+DB += blade_slits.db
+DB += gap_and_centre_slits.db
+DB += flexure_slits.db
+DB += 2jack.db
+DB += 3jack.db
+DB += 3jack_mirror.db
+DB += qcm.db
+DB += motor_in_cs.db
+DB += pmacVariableWriteSync.db
+DB += zform.db
 
 include $(TOP)/configure/RULES
 #----------------------------------------
diff --git a/pmacCoordApp/Db/accel_dcm.db b/pmacCoordApp/Db/accel_dcm.db
new file mode 100644
index 0000000..9bf276f
--- /dev/null
+++ b/pmacCoordApp/Db/accel_dcm.db
@@ -0,0 +1,76 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a bragg axis and vertical 
+# # translation geometry DCM CS. It requires PROG10_CS_motion.pmc and an 
+# # instantiation of CS_accel_dcm.pmc as illustrated in the image below:
+# # \image html accel_dcm-help.png "Setup of DCM CS"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_accelDCM "here", with a pmc file containing 
+# # the CS definition available in iocs/accelDCM/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for an 
+# accel DCM CS 
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, accel_dcm.edl, accel_dcm=$(P)
+record(stringout, "$(P):dummy") {
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":DSPACING")
+  macro(EGU, "A*")
+  macro(PREC, "5")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
+  macro(VAR, "&$(COORD)Q21")
+  macro(Q, ":LOCKT2")
+  macro(EGU, "")
+  macro(PREC, "0")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
+  macro(VAR, "&$(COORD)Q22")
+  macro(Q, ":EVLAMBDA")
+  macro(EGU, "")
+  macro(PREC, "5")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,0,1.0)
+#! Record("$(P):dummy",20,383,0,0,"$(P):dummy")
+
+#! TemplateInstance("pmacVariableWriteSync1",200,380,0,"")
+#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync2",420,380,0,"")
+#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync3",640,380,0,"")
+#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/accel_dcm.vdb b/pmacCoordApp/Db/accel_dcm.vdb
deleted file mode 100644
index 9bf276f..0000000
--- a/pmacCoordApp/Db/accel_dcm.vdb
+++ /dev/null
@@ -1,76 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a bragg axis and vertical 
-# # translation geometry DCM CS. It requires PROG10_CS_motion.pmc and an 
-# # instantiation of CS_accel_dcm.pmc as illustrated in the image below:
-# # \image html accel_dcm-help.png "Setup of DCM CS"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_accelDCM "here", with a pmc file containing 
-# # the CS definition available in iocs/accelDCM/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for an 
-# accel DCM CS 
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, accel_dcm.edl, accel_dcm=$(P)
-record(stringout, "$(P):dummy") {
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":DSPACING")
-  macro(EGU, "A*")
-  macro(PREC, "5")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
-  macro(VAR, "&$(COORD)Q21")
-  macro(Q, ":LOCKT2")
-  macro(EGU, "")
-  macro(PREC, "0")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
-  macro(VAR, "&$(COORD)Q22")
-  macro(Q, ":EVLAMBDA")
-  macro(EGU, "")
-  macro(PREC, "5")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,0,1.0)
-#! Record("$(P):dummy",20,383,0,0,"$(P):dummy")
-
-#! TemplateInstance("pmacVariableWriteSync1",200,380,0,"")
-#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync2",420,380,0,"")
-#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync3",640,380,0,"")
-#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
-
diff --git a/pmacCoordApp/Db/aperture_slits.db b/pmacCoordApp/Db/aperture_slits.db
new file mode 100644
index 0000000..e5a1e94
--- /dev/null
+++ b/pmacCoordApp/Db/aperture_slits.db
@@ -0,0 +1,78 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a set of aperture slits, 
+# # made up of 2 square or rectangular apertures, each probably driven in X and 
+# # Y. A separate instance of this CS is needed for X and Y. It needs 
+# # PROG10_CS_motion.pmc and Each instance requires an instantiation of 
+# # CS_aperture_slits.pmc with the variables shown in the image below:
+# # \image html aperture_slits-help.png "Setup of aperture slits in X or Y"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_apertureSlits "here", with a pmc file containing 
+# # the CS definition available in iocs/apertureSlits/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for a 
+# set of aperture slits
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, PREC, Precision to display variables
+# % macro, APPV, Pv of real AP motor, e.g. $(P):XA
+# % macro, AMPV, Pv of real AM motor, e.g. $(P):XB
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, aperture_slits.edl, slits=$(P)
+# # This record will zero raw motors when processed
+record(fanout, "$(P):ZERO") {
+  field(LNK1, "$(P):ZEROAP")
+  field(LNK2, "$(P):ZEROAM")
+}
+
+record(calcout, "$(P):ZEROAP") {
+  field(CALC, "-B/2-A")
+  field(INPA, "$(APPV).DRBV")
+  field(INPB, "$(P):ASIZE:RBV")
+  field(OUT, "$(APPV).OFF PP")
+}
+
+record(calcout, "$(P):ZEROAM") {
+  field(CALC, "B/2-A")
+  field(INPA, "$(AMPV).DRBV")
+  field(INPB, "$(P):ASIZE:RBV")
+  field(OUT, "$(AMPV).OFF PP")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":ASIZE")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,0,1.0)
+#! Record("$(P):ZERO",20,76,0,0,"$(P):ZERO")
+#! Field("$(P):ZERO.LNK1",16777215,1,"$(P):ZERO.LNK1")
+#! Link("$(P):ZERO.LNK1","$(P):ZEROAP")
+#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
+#! Link("$(P):ZERO.LNK2","$(P):ZEROAM")
+#! Record("$(P):ZEROAP",280,108,0,0,"$(P):ZEROAP")
+#! Field("$(P):ZEROAP.INPA",16777215,1,"$(P):ZEROAP.INPA")
+#! Field("$(P):ZEROAP.INPB",16777215,1,"$(P):ZEROAP.INPB")
+#! Field("$(P):ZEROAP.OUT",16777215,1,"$(P):ZEROAP.OUT")
+#! Record("$(P):ZEROAM",280,308,0,0,"$(P):ZEROAM")
+#! Field("$(P):ZEROAM.INPA",16777215,1,"$(P):ZEROAM.INPA")
+#! Field("$(P):ZEROAM.INPB",16777215,1,"$(P):ZEROAM.INPB")
+#! Field("$(P):ZEROAM.OUT",16777215,1,"$(P):ZEROAM.OUT")
+
+#! TemplateInstance("pmacVariableWriteSync",500,20,0,"")
+#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/aperture_slits.vdb b/pmacCoordApp/Db/aperture_slits.vdb
deleted file mode 100644
index e5a1e94..0000000
--- a/pmacCoordApp/Db/aperture_slits.vdb
+++ /dev/null
@@ -1,78 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a set of aperture slits, 
-# # made up of 2 square or rectangular apertures, each probably driven in X and 
-# # Y. A separate instance of this CS is needed for X and Y. It needs 
-# # PROG10_CS_motion.pmc and Each instance requires an instantiation of 
-# # CS_aperture_slits.pmc with the variables shown in the image below:
-# # \image html aperture_slits-help.png "Setup of aperture slits in X or Y"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_apertureSlits "here", with a pmc file containing 
-# # the CS definition available in iocs/apertureSlits/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for a 
-# set of aperture slits
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, PREC, Precision to display variables
-# % macro, APPV, Pv of real AP motor, e.g. $(P):XA
-# % macro, AMPV, Pv of real AM motor, e.g. $(P):XB
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, aperture_slits.edl, slits=$(P)
-# # This record will zero raw motors when processed
-record(fanout, "$(P):ZERO") {
-  field(LNK1, "$(P):ZEROAP")
-  field(LNK2, "$(P):ZEROAM")
-}
-
-record(calcout, "$(P):ZEROAP") {
-  field(CALC, "-B/2-A")
-  field(INPA, "$(APPV).DRBV")
-  field(INPB, "$(P):ASIZE:RBV")
-  field(OUT, "$(APPV).OFF PP")
-}
-
-record(calcout, "$(P):ZEROAM") {
-  field(CALC, "B/2-A")
-  field(INPA, "$(AMPV).DRBV")
-  field(INPB, "$(P):ASIZE:RBV")
-  field(OUT, "$(AMPV).OFF PP")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":ASIZE")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,0,1.0)
-#! Record("$(P):ZERO",20,76,0,0,"$(P):ZERO")
-#! Field("$(P):ZERO.LNK1",16777215,1,"$(P):ZERO.LNK1")
-#! Link("$(P):ZERO.LNK1","$(P):ZEROAP")
-#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
-#! Link("$(P):ZERO.LNK2","$(P):ZEROAM")
-#! Record("$(P):ZEROAP",280,108,0,0,"$(P):ZEROAP")
-#! Field("$(P):ZEROAP.INPA",16777215,1,"$(P):ZEROAP.INPA")
-#! Field("$(P):ZEROAP.INPB",16777215,1,"$(P):ZEROAP.INPB")
-#! Field("$(P):ZEROAP.OUT",16777215,1,"$(P):ZEROAP.OUT")
-#! Record("$(P):ZEROAM",280,308,0,0,"$(P):ZEROAM")
-#! Field("$(P):ZEROAM.INPA",16777215,1,"$(P):ZEROAM.INPA")
-#! Field("$(P):ZEROAM.INPB",16777215,1,"$(P):ZEROAM.INPB")
-#! Field("$(P):ZEROAM.OUT",16777215,1,"$(P):ZEROAM.OUT")
-
-#! TemplateInstance("pmacVariableWriteSync",500,20,0,"")
-#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
-
diff --git a/pmacCoordApp/Db/bender.db b/pmacCoordApp/Db/bender.db
new file mode 100644
index 0000000..1a1411c
--- /dev/null
+++ b/pmacCoordApp/Db/bender.db
@@ -0,0 +1,98 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a mirror bender with a single
+# # actuator. It requiresPROG10_CS_motion.pmc and an instantiation of 
+# # CS_bender.pmc with the variables shown in the image below:
+# # \image html bender-help.png "Setup of aperture slits in X or Y"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_bender "here", with a pmc file containing 
+# # the CS definition available in iocs/bender/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for a 
+# bender CS 
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, bender-mirror.edl, bender=$(P)
+record(calc, "$(P):SNG") {
+  field(DESC, "Singularity position")
+  field(INPA, "$(P):INTERCEPT:RBV")
+  field(INPB, "$(P):SLOPE:RBV")
+  field(CALC, "-A/B")
+  field(PREC, "3")
+  field(EGU, "mm")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":SLOPE")
+  macro(EGU, "1/Km/mm")
+  macro(PREC, "6")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
+  macro(VAR, "&$(COORD)Q21")
+  macro(Q, ":INTERCEPT")
+  macro(EGU, "1/Km")
+  macro(PREC, "6")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
+  macro(VAR, "&$(COORD)Q22")
+  macro(Q, ":LIMIT")
+  macro(EGU, "Km")
+  macro(PREC, "1")
+}
+
+record(calcout, "$(P):SLOPE:SYNC") {
+  field(FLNK, "$(P):SNG")
+}
+
+record(calcout, "$(P):INTERCEPT:SYNC") {
+  field(FLNK, "$(P):SNG")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(1649,2032,1.0)
+#! Record("$(P):SNG",2040,1820,0,0,"$(P):SNG")
+#! Field("$(P):SNG.INPA",16777215,1,"$(P):SNG.INPA")
+#! Field("$(P):SNG.INPB",16777215,1,"$(P):SNG.INPB")
+
+#! TemplateInstance("pmacVariableWriteSync",2020,2140,0,"")
+#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync2",2240,2140,0,"")
+#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync3",2460,2140,0,"")
+#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
+
+#! Record("$(P):SLOPE:SYNC",1740,1850,0,0,"$(P):SLOPE:SYNC")
+#! Field("$(P):SLOPE:SYNC.FLNK",16777215,1,"$(P):SLOPE:SYNC.FLNK")
+#! Link("$(P):SLOPE:SYNC.FLNK","$(P):SNG")
+#! Record("$(P):INTERCEPT:SYNC",1740,1970,0,0,"$(P):INTERCEPT:SYNC")
+#! Field("$(P):INTERCEPT:SYNC.FLNK",16777215,1,"$(P):INTERCEPT:SYNC.FLNK")
+#! Link("$(P):INTERCEPT:SYNC.FLNK","$(P):SNG")
diff --git a/pmacCoordApp/Db/bender.vdb b/pmacCoordApp/Db/bender.vdb
deleted file mode 100644
index 1a1411c..0000000
--- a/pmacCoordApp/Db/bender.vdb
+++ /dev/null
@@ -1,98 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a mirror bender with a single
-# # actuator. It requiresPROG10_CS_motion.pmc and an instantiation of 
-# # CS_bender.pmc with the variables shown in the image below:
-# # \image html bender-help.png "Setup of aperture slits in X or Y"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_bender "here", with a pmc file containing 
-# # the CS definition available in iocs/bender/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for a 
-# bender CS 
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, bender-mirror.edl, bender=$(P)
-record(calc, "$(P):SNG") {
-  field(DESC, "Singularity position")
-  field(INPA, "$(P):INTERCEPT:RBV")
-  field(INPB, "$(P):SLOPE:RBV")
-  field(CALC, "-A/B")
-  field(PREC, "3")
-  field(EGU, "mm")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":SLOPE")
-  macro(EGU, "1/Km/mm")
-  macro(PREC, "6")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
-  macro(VAR, "&$(COORD)Q21")
-  macro(Q, ":INTERCEPT")
-  macro(EGU, "1/Km")
-  macro(PREC, "6")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
-  macro(VAR, "&$(COORD)Q22")
-  macro(Q, ":LIMIT")
-  macro(EGU, "Km")
-  macro(PREC, "1")
-}
-
-record(calcout, "$(P):SLOPE:SYNC") {
-  field(FLNK, "$(P):SNG")
-}
-
-record(calcout, "$(P):INTERCEPT:SYNC") {
-  field(FLNK, "$(P):SNG")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(1649,2032,1.0)
-#! Record("$(P):SNG",2040,1820,0,0,"$(P):SNG")
-#! Field("$(P):SNG.INPA",16777215,1,"$(P):SNG.INPA")
-#! Field("$(P):SNG.INPB",16777215,1,"$(P):SNG.INPB")
-
-#! TemplateInstance("pmacVariableWriteSync",2020,2140,0,"")
-#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync2",2240,2140,0,"")
-#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync3",2460,2140,0,"")
-#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
-
-#! Record("$(P):SLOPE:SYNC",1740,1850,0,0,"$(P):SLOPE:SYNC")
-#! Field("$(P):SLOPE:SYNC.FLNK",16777215,1,"$(P):SLOPE:SYNC.FLNK")
-#! Link("$(P):SLOPE:SYNC.FLNK","$(P):SNG")
-#! Record("$(P):INTERCEPT:SYNC",1740,1970,0,0,"$(P):INTERCEPT:SYNC")
-#! Field("$(P):INTERCEPT:SYNC.FLNK",16777215,1,"$(P):INTERCEPT:SYNC.FLNK")
-#! Link("$(P):INTERCEPT:SYNC.FLNK","$(P):SNG")
diff --git a/pmacCoordApp/Db/blade_slits.db b/pmacCoordApp/Db/blade_slits.db
new file mode 100644
index 0000000..10eb85b
--- /dev/null
+++ b/pmacCoordApp/Db/blade_slits.db
@@ -0,0 +1,55 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a set of blade slits, 
+# # made up two pairs of blades, one each for X and Y. A separate instance of 
+# # this CS is needed for X and Y. It needs PROG10_CS_motion.pmc and each 
+# # instance requires an instantiation of CS_blade_slits.pmc with the variables 
+# # shown in the image below:
+# # \image html blade_slits-help.png "Setup of blade slits in X or Y"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_bladeSlits "here", with a pmc file containing 
+# # the CS definition available in iocs/bladeSlits/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for a 
+# set of blade slits
+# % macro, P, Pv Prefix
+# % macro, BPPV, Pv of real BP motor, e.g. $(P):X:PLUS
+# % macro, BMPV, Pv of real BM motor, e.g. $(P):X:MINUS
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, blade_slits.edl, slits=$(P)
+# # This record will zero raw motors when processed
+record(fanout, "$(P):ZERO") {
+  field(LNK1, "$(P):ZEROBP")
+  field(LNK2, "$(P):ZEROBM")
+}
+
+record(calcout, "$(P):ZEROBP") {
+  field(CALC, "-A")
+  field(INPA, "$(BPPV).DRBV")
+  field(OUT, "$(BPPV).OFF PP")
+}
+
+record(calcout, "$(P):ZEROBM") {
+  field(CALC, "-A")
+  field(INPA, "$(BMPV).DRBV")
+  field(OUT, "$(BMPV).OFF PP")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,0,1.0)
+#! Record("$(P):ZERO",20,76,0,0,"$(P):ZERO")
+#! Field("$(P):ZERO.LNK1",16777215,1,"$(P):ZERO.LNK1")
+#! Link("$(P):ZERO.LNK1","$(P):ZEROBP")
+#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
+#! Link("$(P):ZERO.LNK2","$(P):ZEROBM")
+#! Record("$(P):ZEROBP",280,102,0,0,"$(P):ZEROBP")
+#! Field("$(P):ZEROBP.INPA",16777215,1,"$(P):ZEROBP.INPA")
+#! Field("$(P):ZEROBP.OUT",16777215,1,"$(P):ZEROBP.OUT")
+#! Record("$(P):ZEROBM",280,302,0,0,"$(P):ZEROBM")
+#! Field("$(P):ZEROBM.INPA",16777215,1,"$(P):ZEROBM.INPA")
+#! Field("$(P):ZEROBM.OUT",16777215,1,"$(P):ZEROBM.OUT")
diff --git a/pmacCoordApp/Db/blade_slits.vdb b/pmacCoordApp/Db/blade_slits.vdb
deleted file mode 100644
index 10eb85b..0000000
--- a/pmacCoordApp/Db/blade_slits.vdb
+++ /dev/null
@@ -1,55 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a set of blade slits, 
-# # made up two pairs of blades, one each for X and Y. A separate instance of 
-# # this CS is needed for X and Y. It needs PROG10_CS_motion.pmc and each 
-# # instance requires an instantiation of CS_blade_slits.pmc with the variables 
-# # shown in the image below:
-# # \image html blade_slits-help.png "Setup of blade slits in X or Y"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_bladeSlits "here", with a pmc file containing 
-# # the CS definition available in iocs/bladeSlits/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for a 
-# set of blade slits
-# % macro, P, Pv Prefix
-# % macro, BPPV, Pv of real BP motor, e.g. $(P):X:PLUS
-# % macro, BMPV, Pv of real BM motor, e.g. $(P):X:MINUS
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, blade_slits.edl, slits=$(P)
-# # This record will zero raw motors when processed
-record(fanout, "$(P):ZERO") {
-  field(LNK1, "$(P):ZEROBP")
-  field(LNK2, "$(P):ZEROBM")
-}
-
-record(calcout, "$(P):ZEROBP") {
-  field(CALC, "-A")
-  field(INPA, "$(BPPV).DRBV")
-  field(OUT, "$(BPPV).OFF PP")
-}
-
-record(calcout, "$(P):ZEROBM") {
-  field(CALC, "-A")
-  field(INPA, "$(BMPV).DRBV")
-  field(OUT, "$(BMPV).OFF PP")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,0,1.0)
-#! Record("$(P):ZERO",20,76,0,0,"$(P):ZERO")
-#! Field("$(P):ZERO.LNK1",16777215,1,"$(P):ZERO.LNK1")
-#! Link("$(P):ZERO.LNK1","$(P):ZEROBP")
-#! Field("$(P):ZERO.LNK2",16777215,1,"$(P):ZERO.LNK2")
-#! Link("$(P):ZERO.LNK2","$(P):ZEROBM")
-#! Record("$(P):ZEROBP",280,102,0,0,"$(P):ZEROBP")
-#! Field("$(P):ZEROBP.INPA",16777215,1,"$(P):ZEROBP.INPA")
-#! Field("$(P):ZEROBP.OUT",16777215,1,"$(P):ZEROBP.OUT")
-#! Record("$(P):ZEROBM",280,302,0,0,"$(P):ZEROBM")
-#! Field("$(P):ZEROBM.INPA",16777215,1,"$(P):ZEROBM.INPA")
-#! Field("$(P):ZEROBM.OUT",16777215,1,"$(P):ZEROBM.OUT")
diff --git a/pmacCoordApp/Db/flexure_slits.db b/pmacCoordApp/Db/flexure_slits.db
new file mode 100644
index 0000000..5f2a38f
--- /dev/null
+++ b/pmacCoordApp/Db/flexure_slits.db
@@ -0,0 +1,63 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a set of flexure slits, 
+# # made up two pairs of flexures, one each for X and Y. A separate instance of 
+# # this CS is needed for X and Y. It needs PROG10_CS_motion.pmc and each 
+# # instance requires an instantiation of CS_flexure_slits.pmc with the 
+# # variables shown in the image below:
+# # \image html flexure_slits-help.png "Setup of flexure slits in X or Y"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_flexureSlits "here", with a pmc file containing 
+# # the CS definition available in iocs/flexureSlits/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for a 
+# set of flexure slits
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, PREC, Precision to display variables
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, flexure_slits.edl, slits=$(P)
+record(stringout, "$(P):dummy") {
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":LL")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
+  macro(VAR, "&$(COORD)Q21")
+  macro(Q, ":SW")
+  macro(EGU, "mm")
+  macro(PREC, "$(PREC=3)")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,0,1.0)
+#! Record("$(P):dummy",20,23,0,0,"$(P):dummy")
+
+#! TemplateInstance("pmacVariableWriteSync",500,20,0,"")
+#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync2",260,20,0,"")
+#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/flexure_slits.vdb b/pmacCoordApp/Db/flexure_slits.vdb
deleted file mode 100644
index 5f2a38f..0000000
--- a/pmacCoordApp/Db/flexure_slits.vdb
+++ /dev/null
@@ -1,63 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a set of flexure slits, 
-# # made up two pairs of flexures, one each for X and Y. A separate instance of 
-# # this CS is needed for X and Y. It needs PROG10_CS_motion.pmc and each 
-# # instance requires an instantiation of CS_flexure_slits.pmc with the 
-# # variables shown in the image below:
-# # \image html flexure_slits-help.png "Setup of flexure slits in X or Y"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_flexureSlits "here", with a pmc file containing 
-# # the CS definition available in iocs/flexureSlits/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for a 
-# set of flexure slits
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, PREC, Precision to display variables
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, flexure_slits.edl, slits=$(P)
-record(stringout, "$(P):dummy") {
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":LL")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
-  macro(VAR, "&$(COORD)Q21")
-  macro(Q, ":SW")
-  macro(EGU, "mm")
-  macro(PREC, "$(PREC=3)")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,0,1.0)
-#! Record("$(P):dummy",20,23,0,0,"$(P):dummy")
-
-#! TemplateInstance("pmacVariableWriteSync",500,20,0,"")
-#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync2",260,20,0,"")
-#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
-
diff --git a/pmacCoordApp/Db/gap_and_centre_slits.db b/pmacCoordApp/Db/gap_and_centre_slits.db
new file mode 100644
index 0000000..1221b25
--- /dev/null
+++ b/pmacCoordApp/Db/gap_and_centre_slits.db
@@ -0,0 +1,46 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# # \file
+# # This template allows setting of variables for a set of gap and centre slits, 
+# # made up two slit mechanisms, one each for X and Y. A separate instance of 
+# # this CS is needed for X and Y. It needs PROG10_CS_motion.pmc and each 
+# # instance requires an instantiation of CS_gap_and_centre_slits.pmc with the 
+# # variables shown in the image below:
+# # \image html gap_and_centre_slits-help.png "Setup of gap and centre slits in X or Y"
+# # Build instructions for an example IOC are available 
+# # \ref build_instructions_gapCentreSlits "here", with a pmc file containing 
+# # the CS definition available in iocs/gapCentreSlits/defs.pmc
+# % macro, __doc__, Supporting template that allows setting of variables for a 
+# set of gap and slits
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, gap_and_centre_slits.edl, slits=$(P)
+record(stringout, "$(P):dummy") {
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
+  macro(VAR, "&$(COORD)Q20")
+  macro(Q, ":DIR")
+  macro(EGU, "")
+  macro(PREC, "0")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,0,1.0)
+#! Record("$(P):dummy",20,23,0,0,"$(P):dummy")
+
+#! TemplateInstance("pmacVariableWriteSync",500,20,0,"")
+#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/gap_and_centre_slits.vdb b/pmacCoordApp/Db/gap_and_centre_slits.vdb
deleted file mode 100644
index 1221b25..0000000
--- a/pmacCoordApp/Db/gap_and_centre_slits.vdb
+++ /dev/null
@@ -1,46 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# # \file
-# # This template allows setting of variables for a set of gap and centre slits, 
-# # made up two slit mechanisms, one each for X and Y. A separate instance of 
-# # this CS is needed for X and Y. It needs PROG10_CS_motion.pmc and each 
-# # instance requires an instantiation of CS_gap_and_centre_slits.pmc with the 
-# # variables shown in the image below:
-# # \image html gap_and_centre_slits-help.png "Setup of gap and centre slits in X or Y"
-# # Build instructions for an example IOC are available 
-# # \ref build_instructions_gapCentreSlits "here", with a pmc file containing 
-# # the CS definition available in iocs/gapCentreSlits/defs.pmc
-# % macro, __doc__, Supporting template that allows setting of variables for a 
-# set of gap and slits
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, gap_and_centre_slits.edl, slits=$(P)
-record(stringout, "$(P):dummy") {
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync) {
-  macro(VAR, "&$(COORD)Q20")
-  macro(Q, ":DIR")
-  macro(EGU, "")
-  macro(PREC, "0")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,0,1.0)
-#! Record("$(P):dummy",20,23,0,0,"$(P):dummy")
-
-#! TemplateInstance("pmacVariableWriteSync",500,20,0,"")
-#! TemplateField("pmacVariableWriteSync","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync","PREC",16777215,0,1)
-
diff --git a/pmacCoordApp/Db/pmacVariableWriteSync.db b/pmacCoordApp/Db/pmacVariableWriteSync.db
new file mode 100644
index 0000000..59410bc
--- /dev/null
+++ b/pmacCoordApp/Db/pmacVariableWriteSync.db
@@ -0,0 +1,75 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+template() {
+
+  #! InputMacro(VAR,"",520,280,16777215,1,true)
+  #! InputMacro(EGU,"",260,320,16777215,1,true)
+  #! InputMacro(Q,"",520,200,16777215,1,true)
+  #! InputMacro(PORT,"",520,240,16777215,1,true)
+  #! InputMacro(P,"",520,160,16777215,1,true)
+  #! InputMacro(PREC,"",340,380,16777215,1,true)
+}
+
+record(ai, "$(P)$(Q):RBV") {
+  field(DESC, "readback")
+  field(DTYP, "stream")
+  field(FLNK, "$(P)$(Q):SYNC")
+  field(SCAN, "2 second")
+  field(EGU, "$(EGU)")
+  field(PREC, "$(PREC)")
+  field(INP, "@pmacCoord.proto getVar($(VAR)) $(PORT)")
+}
+
+record(calcout, "$(P)$(Q):SYNC") {
+  field(DESC, "sync demand with readback")
+  field(CALC, "A")
+  field(OUT, "$(P)$(Q) PP")
+  field(INPA, "$(P)$(Q):RBV")
+}
+
+record(ao, "$(P)$(Q)") {
+  field(DESC, "demand")
+  field(EGU, "$(EGU)")
+  field(PREC, "$(PREC)")
+  field(OUT, "$(P)$(Q):SET PP")
+}
+
+record(ao, "$(P)$(Q):SET") {
+  field(DESC, "Write value to pmac")
+  field(DTYP, "stream")
+  field(SDIS, "$(P)$(Q):SYNC.PACT")
+  field(OUT, "@pmacCoord.proto setVar($(VAR)) $(PORT)")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,24,1.0)
+#! Record("$(P)$(Q):RBV",60,246,0,0,"$(P)$(Q):RBV")
+#! Field("$(P)$(Q):RBV.EGU",16777215,1,"$(P)$(Q):RBV.EGU")
+#! Link("$(P)$(Q):RBV.EGU",EGU)
+#! Field("$(P)$(Q):RBV.PREC",16777215,1,"$(P)$(Q):RBV.PREC")
+#! Link("$(P)$(Q):RBV.PREC",PREC)
+#! Field("$(P)$(Q):RBV.FLNK",16777215,1,"$(P)$(Q):RBV.FLNK")
+#! Link("$(P)$(Q):RBV.FLNK","$(P)$(Q):SYNC")
+#! Field("$(P)$(Q):RBV.VAL",16777215,1,"$(P)$(Q):RBV.VAL")
+#! Record("$(P)$(Q):SYNC",400,368,0,0,"$(P)$(Q):SYNC")
+#! Field("$(P)$(Q):SYNC.OUT",16777215,1,"$(P)$(Q):SYNC.OUT")
+#! Link("$(P)$(Q):SYNC.OUT","$(P)$(Q).VAL")
+#! Field("$(P)$(Q):SYNC.INPA",16777215,0,"$(P)$(Q):SYNC.INPA")
+#! Link("$(P)$(Q):SYNC.INPA","$(P)$(Q):RBV.VAL")
+#! Field("$(P)$(Q):SYNC.PACT",16777215,1,"$(P)$(Q):SYNC.PACT")
+#! Record("$(P)$(Q)",680,208,0,0,"$(P)$(Q)")
+#! Field("$(P)$(Q).EGU",16777215,0,"$(P)$(Q).EGU")
+#! Link("$(P)$(Q).EGU",EGU)
+#! Field("$(P)$(Q).PREC",16777215,0,"$(P)$(Q).PREC")
+#! Link("$(P)$(Q).PREC",PREC)
+#! Field("$(P)$(Q).VAL",16777215,0,"$(P)$(Q).VAL")
+#! Field("$(P)$(Q).OUT",16777215,1,"$(P)$(Q).OUT")
+#! Link("$(P)$(Q).OUT","$(P)$(Q):SET.VAL")
+#! Record("$(P)$(Q):SET",960,388,0,0,"$(P)$(Q):SET")
+#! Field("$(P)$(Q):SET.VAL",16777215,0,"$(P)$(Q):SET.VAL")
+#! Field("$(P)$(Q):SET.SDIS",16777215,0,"$(P)$(Q):SET.SDIS")
+#! Link("$(P)$(Q):SET.SDIS","$(P)$(Q):SYNC.PACT")
diff --git a/pmacCoordApp/Db/pmacVariableWriteSync.vdb b/pmacCoordApp/Db/pmacVariableWriteSync.vdb
deleted file mode 100644
index 59410bc..0000000
--- a/pmacCoordApp/Db/pmacVariableWriteSync.vdb
+++ /dev/null
@@ -1,75 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-template() {
-
-  #! InputMacro(VAR,"",520,280,16777215,1,true)
-  #! InputMacro(EGU,"",260,320,16777215,1,true)
-  #! InputMacro(Q,"",520,200,16777215,1,true)
-  #! InputMacro(PORT,"",520,240,16777215,1,true)
-  #! InputMacro(P,"",520,160,16777215,1,true)
-  #! InputMacro(PREC,"",340,380,16777215,1,true)
-}
-
-record(ai, "$(P)$(Q):RBV") {
-  field(DESC, "readback")
-  field(DTYP, "stream")
-  field(FLNK, "$(P)$(Q):SYNC")
-  field(SCAN, "2 second")
-  field(EGU, "$(EGU)")
-  field(PREC, "$(PREC)")
-  field(INP, "@pmacCoord.proto getVar($(VAR)) $(PORT)")
-}
-
-record(calcout, "$(P)$(Q):SYNC") {
-  field(DESC, "sync demand with readback")
-  field(CALC, "A")
-  field(OUT, "$(P)$(Q) PP")
-  field(INPA, "$(P)$(Q):RBV")
-}
-
-record(ao, "$(P)$(Q)") {
-  field(DESC, "demand")
-  field(EGU, "$(EGU)")
-  field(PREC, "$(PREC)")
-  field(OUT, "$(P)$(Q):SET PP")
-}
-
-record(ao, "$(P)$(Q):SET") {
-  field(DESC, "Write value to pmac")
-  field(DTYP, "stream")
-  field(SDIS, "$(P)$(Q):SYNC.PACT")
-  field(OUT, "@pmacCoord.proto setVar($(VAR)) $(PORT)")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,24,1.0)
-#! Record("$(P)$(Q):RBV",60,246,0,0,"$(P)$(Q):RBV")
-#! Field("$(P)$(Q):RBV.EGU",16777215,1,"$(P)$(Q):RBV.EGU")
-#! Link("$(P)$(Q):RBV.EGU",EGU)
-#! Field("$(P)$(Q):RBV.PREC",16777215,1,"$(P)$(Q):RBV.PREC")
-#! Link("$(P)$(Q):RBV.PREC",PREC)
-#! Field("$(P)$(Q):RBV.FLNK",16777215,1,"$(P)$(Q):RBV.FLNK")
-#! Link("$(P)$(Q):RBV.FLNK","$(P)$(Q):SYNC")
-#! Field("$(P)$(Q):RBV.VAL",16777215,1,"$(P)$(Q):RBV.VAL")
-#! Record("$(P)$(Q):SYNC",400,368,0,0,"$(P)$(Q):SYNC")
-#! Field("$(P)$(Q):SYNC.OUT",16777215,1,"$(P)$(Q):SYNC.OUT")
-#! Link("$(P)$(Q):SYNC.OUT","$(P)$(Q).VAL")
-#! Field("$(P)$(Q):SYNC.INPA",16777215,0,"$(P)$(Q):SYNC.INPA")
-#! Link("$(P)$(Q):SYNC.INPA","$(P)$(Q):RBV.VAL")
-#! Field("$(P)$(Q):SYNC.PACT",16777215,1,"$(P)$(Q):SYNC.PACT")
-#! Record("$(P)$(Q)",680,208,0,0,"$(P)$(Q)")
-#! Field("$(P)$(Q).EGU",16777215,0,"$(P)$(Q).EGU")
-#! Link("$(P)$(Q).EGU",EGU)
-#! Field("$(P)$(Q).PREC",16777215,0,"$(P)$(Q).PREC")
-#! Link("$(P)$(Q).PREC",PREC)
-#! Field("$(P)$(Q).VAL",16777215,0,"$(P)$(Q).VAL")
-#! Field("$(P)$(Q).OUT",16777215,1,"$(P)$(Q).OUT")
-#! Link("$(P)$(Q).OUT","$(P)$(Q):SET.VAL")
-#! Record("$(P)$(Q):SET",960,388,0,0,"$(P)$(Q):SET")
-#! Field("$(P)$(Q):SET.VAL",16777215,0,"$(P)$(Q):SET.VAL")
-#! Field("$(P)$(Q):SET.SDIS",16777215,0,"$(P)$(Q):SET.SDIS")
-#! Link("$(P)$(Q):SET.SDIS","$(P)$(Q):SYNC.PACT")
diff --git a/pmacCoordApp/Db/qcm.db b/pmacCoordApp/Db/qcm.db
new file mode 100644
index 0000000..cbe104a
--- /dev/null
+++ b/pmacCoordApp/Db/qcm.db
@@ -0,0 +1,257 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+
+# % macro, __doc__, Use this template with CS_qcm.pmc to implement
+# a mode for changing energy that only moves Bragg1.
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, COORD, Co-ordinate system number
+# % macro, RADMRES1, Scale factor to turn B1 units into Rads
+# % macro, RADMRES2, Scale factor to turn B2 units into Rads
+# % macro, gda_name, GDA name
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, qcm.edl, P=$(P)
+# % autosave 2 VAL
+# % gdatag,template,simpleBinary,$(gda_name=).ENERGY.MODE,$(gda_name=) energy mode
+# % gdatag,binary,rw,$(gda_name=).ENERGY.MODE,RECORD,Energy Control Mode
+record(bo, "$(P):ENERGYMODE") {
+  field(DTYP, "stream")
+  field(OUT, "@pmacCoord.proto setIntVar(&$(COORD)Q20) $(PORT)")
+  field(VAL, "0")
+  field(ZNAM, "Bragg and Offset")
+  field(ONAM, "Bragg1 and Bragg2")
+  field(DESC, "Energy mode")
+  field(PINI, "YES")
+}
+
+record(stringout, "$(P):B1:PHASE:START") {
+  field(DESC, "phase bragg 1 mtr")
+  field(DTYP, "stream")
+  field(VAL, "enable plc 21")
+  field(OUT, "@pmacCoord.proto sendString $(PORT)")
+  field(FLNK, "$(P):B1:PHASING")
+}
+
+record(stringout, "$(P):B2:PHASE:START") {
+  field(DESC, "phase bragg 2 mtr")
+  field(DTYP, "stream")
+  field(VAL, "enable plc 22")
+  field(OUT, "@pmacCoord.proto sendString $(PORT)")
+  field(FLNK, "$(P):B1:PHASING")
+}
+
+record(ai, "$(P):B1:PHASING") {
+  field(SCAN, "Passive")
+  field(PINI, "NO")
+  field(DTYP, "stream")
+  field(FLNK, "$(P):B2:PHASING")
+  field(INP, "@pmacCoord.proto getVar(M5021) $(PORT)")
+  field(PREC, "0")
+}
+
+record(ai, "$(P):B2:PHASING") {
+  field(SCAN, "Passive")
+  field(PINI, "NO")
+  field(DTYP, "stream")
+  field(INP, "@pmacCoord.proto getVar(M5022) $(PORT)")
+  field(PREC, "0")
+}
+
+record(bo, "$(P):B1:CLK") {
+  field(SCAN, "5 second")
+  field(DTYP, "Soft Channel")
+  field(FLNK, "$(P):B1:PHASING")
+}
+
+record(bi, "$(P):XTAL") {
+  field(DTYP, "Raw Soft Channel")
+  field(ZNAM, "Si(111)")
+  field(ONAM, "Si(311)")
+}
+
+record(ai, "$(P):GET:XTALSPACE") {
+  field(DESC, "Get pmac variable")
+  field(SCAN, "10 second")
+  field(DTYP, "stream")
+  field(FLNK, "$(P):XTALSPACE")
+  field(INP, "@pmacCoord.proto getVar(&$(COORD)Q21) $(PORT)")
+}
+
+record(calcout, "$(P):XTALSPACE") {
+  field(SCAN, "Passive")
+  field(PINI, "NO")
+  field(DTYP, "Soft Channel")
+  field(CALC, "A>3?0:1")
+  field(INPA, "$(P):GET:XTALSPACE")
+  field(OUT, "$(P):XTAL.RVAL PP")
+  field(OOPT, "Every Time")
+  field(DOPT, "Use CALC")
+  field(PREC, "9")
+}
+
+record(stringout, "$(P):MSCLRF0") {
+  field(DESC, "Send MSCLRF0 cmd")
+  field(SCAN, "Passive")
+  field(DTYP, "stream")
+  field(VAL, "MSCLRF0")
+  field(OUT, "@pmacCoord.proto sendString $(PORT)")
+}
+
+record(bo, "$(P):SETXTAL") {
+  field(VAL, "0")
+  field(ZNAM, "Si(111)")
+  field(ONAM, "Si(311)")
+  field(DESC, "set xtal type")
+  field(FLNK, "$(P):XTAL:SPACING")
+  field(PINI, "YES")
+}
+
+record(calcout, "$(P):XTAL:SPACING") {
+  field(DTYP, "stream")
+  field(CALC, "A=0?B:C")
+  field(INPA, "$(P):SETXTAL")
+  field(INPB, "3.13475")
+  field(INPC, "1.637069796")
+  field(OUT, "@pmacCoord.proto setVar(&$(COORD)Q21) $(PORT)")
+  field(OOPT, "Every Time")
+  field(DOPT, "Use CALC")
+}
+
+record(ao, "$(P):BRAGG1:ACTUAL") {
+  field(DESC, "bragg energy actual")
+  field(OMSL, "supervisory")
+  field(DRVH, "40000")
+  field(DRVL, "-40000")
+  field(EGU, "eV")
+}
+
+record(ao, "$(P):BRAGG2:ACTUAL") {
+  field(DESC, "bragg energy actual")
+  field(OMSL, "supervisory")
+  field(DRVH, "40000")
+  field(DRVL, "-40000")
+  field(EGU, "eV")
+}
+
+record(transform, "$(P):CALC:B2OFF") {
+  field(CLCE, "(D*1000)/(2*C)")
+  field(CLCF, "ASIN(E/A)")
+  field(CLCG, "ASIN(E/B)")
+  field(CLCK, "((G-F)/H)*I*32")
+  field(CLCL, "J+K")
+  field(INPA, "$(P):BRAGG2.RBV")
+  field(INPB, "$(P):BRAGG2:ACTUAL")
+  field(INPC, "$(P):XTAL:SPACING")
+  field(INPD, "12.3985")
+  field(INPH, "$(RADMRES2)")
+  field(INPI, "$(P):B2:ENC1234.MRES")
+  field(INPJ, "$(P):B2:ENC1234.OFF")
+  field(CMTA, "bragg energy readback")
+  field(CMTB, "bragg energy actual")
+  field(CMTC, "xtal spacing d")
+  field(CMTD, "Evlambda")
+  field(CMTE, "(Evlambda*1000)/2d")
+  field(CMTF, "bragg rad readback")
+  field(CMTG, "bragg rad actual")
+  field(CMTH, "RADMRES2")
+  field(CMTI, "B2MRES")
+  field(CMTJ, "B2OFF")
+  field(CMTK, "B2 offset correction")
+  field(CMTL, "new B2OFF")
+  field(DESC, "calc new B2 motor offset")
+  field(OUTL, "$(P):B2:ENC1234.OFF")
+}
+
+record(transform, "$(P):CALC:B1OFF") {
+  field(CLCE, "(D*1000)/(2*C)")
+  field(CLCF, "ASIN(E/A)")
+  field(CLCG, "ASIN(E/B)")
+  field(CLCK, "((G-F)/H)*I*32")
+  field(CLCL, "J+K")
+  field(INPA, "$(P):BRAGG1.RBV")
+  field(INPB, "$(P):BRAGG1:ACTUAL")
+  field(INPC, "$(P):XTAL:SPACING")
+  field(INPD, "12.3985")
+  field(INPH, "$(RADMRES1)")
+  field(INPI, "$(P):B1:ENC1234.MRES")
+  field(INPJ, "$(P):B1:ENC1234.OFF")
+  field(CMTA, "bragg energy readback")
+  field(CMTB, "bragg energy actual")
+  field(CMTC, "xtal spacing d")
+  field(CMTD, "Evlambda")
+  field(CMTE, "(Evlambda*1000)/2d")
+  field(CMTF, "bragg rad readback")
+  field(CMTG, "bragg rad actual")
+  field(CMTH, "RADMRES1")
+  field(CMTI, "B1MRES")
+  field(CMTJ, "B1OFF")
+  field(CMTK, "B1 offset correction")
+  field(CMTL, "new B1OFF")
+  field(DESC, "calc new B1 motor offset")
+  field(OUTL, "$(P):B1:ENC1234.OFF")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(1084,590,1.0)
+#! Record("$(P):ENERGYMODE",1420,646,0,0,"$(P):ENERGYMODE")
+#! Record("$(P):B1:PHASE:START",1420,814,0,1,"$(P):B1:PHASE:START")
+#! Field("$(P):B1:PHASE:START.FLNK",16777215,1,"$(P):B1:PHASE:START.FLNK")
+#! Link("$(P):B1:PHASE:START.FLNK","$(P):B1:PHASING")
+#! Record("$(P):B2:PHASE:START",1420,1014,0,1,"$(P):B2:PHASE:START")
+#! Field("$(P):B2:PHASE:START.FLNK",16777215,1,"$(P):B2:PHASE:START.FLNK")
+#! Link("$(P):B2:PHASE:START.FLNK","$(P):B1:PHASING")
+#! Record("$(P):B1:PHASING",1680,900,0,0,"$(P):B1:PHASING")
+#! Field("$(P):B1:PHASING.FLNK",16777215,1,"$(P):B1:PHASING.FLNK")
+#! Link("$(P):B1:PHASING.FLNK","$(P):B2:PHASING")
+#! Record("$(P):B2:PHASING",1700,1094,0,1,"$(P):B2:PHASING")
+#! Record("$(P):B1:CLK",1420,1182,0,1,"$(P):B1:CLK")
+#! Field("$(P):B1:CLK.FLNK",16777215,1,"$(P):B1:CLK.FLNK")
+#! Link("$(P):B1:CLK.FLNK","$(P):B1:PHASING")
+#! Record("$(P):XTAL",420,862,0,1,"$(P):XTAL")
+#! Field("$(P):XTAL.RVAL",16777215,1,"$(P):XTAL.RVAL")
+#! Record("$(P):GET:XTALSPACE",400,1014,0,0,"$(P):GET:XTALSPACE")
+#! Field("$(P):GET:XTALSPACE.FLNK",16777215,0,"$(P):GET:XTALSPACE.FLNK")
+#! Link("$(P):GET:XTALSPACE.FLNK","$(P):XTALSPACE")
+#! Field("$(P):GET:XTALSPACE.VAL",16777215,1,"$(P):GET:XTALSPACE.VAL")
+#! Record("$(P):XTALSPACE",380,519,0,0,"$(P):XTALSPACE")
+#! Field("$(P):XTALSPACE.INPA",16777215,1,"$(P):XTALSPACE.INPA")
+#! Link("$(P):XTALSPACE.INPA","$(P):GET:XTALSPACE.VAL")
+#! Field("$(P):XTALSPACE.OUT",16777215,1,"$(P):XTALSPACE.OUT")
+#! Link("$(P):XTALSPACE.OUT","$(P):XTAL.RVAL")
+#! Record("$(P):MSCLRF0",1680,654,0,1,"$(P):MSCLRF0")
+#! Record("$(P):SETXTAL",700,700,0,1,"$(P):SETXTAL")
+#! Field("$(P):SETXTAL.FLNK",16777215,1,"$(P):SETXTAL.FLNK")
+#! Link("$(P):SETXTAL.FLNK","$(P):XTAL:SPACING")
+#! Field("$(P):SETXTAL.VAL",16777215,1,"$(P):SETXTAL.VAL")
+#! Record("$(P):XTAL:SPACING",980,692,0,0,"$(P):XTAL:SPACING")
+#! Field("$(P):XTAL:SPACING.INPA",16777215,0,"$(P):XTAL:SPACING.INPA")
+#! Link("$(P):XTAL:SPACING.INPA","$(P):SETXTAL.VAL")
+#! Field("$(P):XTAL:SPACING.VAL",16777215,1,"$(P):XTAL:SPACING.VAL")
+#! Record("$(P):BRAGG1:ACTUAL",480,1234,0,1,"$(P):BRAGG1:ACTUAL")
+#! Field("$(P):BRAGG1:ACTUAL.VAL",16777215,0,"$(P):BRAGG1:ACTUAL.VAL")
+#! Record("$(P):BRAGG2:ACTUAL",980,1234,0,1,"$(P):BRAGG2:ACTUAL")
+#! Field("$(P):BRAGG2:ACTUAL.VAL",16777215,0,"$(P):BRAGG2:ACTUAL.VAL")
+#! Record("$(P):CALC:B2OFF",1220,1143,0,0,"$(P):CALC:B2OFF")
+#! Field("$(P):CALC:B2OFF.INPA",16777215,1,"$(P):CALC:B2OFF.INPA")
+#! Field("$(P):CALC:B2OFF.INPB",16777215,0,"$(P):CALC:B2OFF.INPB")
+#! Link("$(P):CALC:B2OFF.INPB","$(P):BRAGG2:ACTUAL.VAL")
+#! Field("$(P):CALC:B2OFF.INPC",16777215,0,"$(P):CALC:B2OFF.INPC")
+#! Link("$(P):CALC:B2OFF.INPC","$(P):XTAL:SPACING.VAL")
+#! Field("$(P):CALC:B2OFF.INPH",16777215,1,"$(P):CALC:B2OFF.INPH")
+#! Field("$(P):CALC:B2OFF.INPI",16777215,1,"$(P):CALC:B2OFF.INPI")
+#! Field("$(P):CALC:B2OFF.INPJ",16777215,1,"$(P):CALC:B2OFF.INPJ")
+#! Field("$(P):CALC:B2OFF.OUTL",16777215,1,"$(P):CALC:B2OFF.OUTL")
+#! Record("$(P):CALC:B1OFF",740,1143,0,0,"$(P):CALC:B1OFF")
+#! Field("$(P):CALC:B1OFF.INPA",16777215,1,"$(P):CALC:B1OFF.INPA")
+#! Field("$(P):CALC:B1OFF.INPB",16777215,0,"$(P):CALC:B1OFF.INPB")
+#! Link("$(P):CALC:B1OFF.INPB","$(P):BRAGG1:ACTUAL.VAL")
+#! Field("$(P):CALC:B1OFF.INPC",16777215,1,"$(P):CALC:B1OFF.INPC")
+#! Link("$(P):CALC:B1OFF.INPC","$(P):XTAL:SPACING.VAL")
+#! Field("$(P):CALC:B1OFF.INPH",16777215,1,"$(P):CALC:B1OFF.INPH")
+#! Field("$(P):CALC:B1OFF.INPI",16777215,1,"$(P):CALC:B1OFF.INPI")
+#! Field("$(P):CALC:B1OFF.INPJ",16777215,1,"$(P):CALC:B1OFF.INPJ")
+#! Field("$(P):CALC:B1OFF.OUTL",16777215,1,"$(P):CALC:B1OFF.OUTL")
diff --git a/pmacCoordApp/Db/qcm.vdb b/pmacCoordApp/Db/qcm.vdb
deleted file mode 100644
index cbe104a..0000000
--- a/pmacCoordApp/Db/qcm.vdb
+++ /dev/null
@@ -1,257 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-
-# % macro, __doc__, Use this template with CS_qcm.pmc to implement
-# a mode for changing energy that only moves Bragg1.
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, COORD, Co-ordinate system number
-# % macro, RADMRES1, Scale factor to turn B1 units into Rads
-# % macro, RADMRES2, Scale factor to turn B2 units into Rads
-# % macro, gda_name, GDA name
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, qcm.edl, P=$(P)
-# % autosave 2 VAL
-# % gdatag,template,simpleBinary,$(gda_name=).ENERGY.MODE,$(gda_name=) energy mode
-# % gdatag,binary,rw,$(gda_name=).ENERGY.MODE,RECORD,Energy Control Mode
-record(bo, "$(P):ENERGYMODE") {
-  field(DTYP, "stream")
-  field(OUT, "@pmacCoord.proto setIntVar(&$(COORD)Q20) $(PORT)")
-  field(VAL, "0")
-  field(ZNAM, "Bragg and Offset")
-  field(ONAM, "Bragg1 and Bragg2")
-  field(DESC, "Energy mode")
-  field(PINI, "YES")
-}
-
-record(stringout, "$(P):B1:PHASE:START") {
-  field(DESC, "phase bragg 1 mtr")
-  field(DTYP, "stream")
-  field(VAL, "enable plc 21")
-  field(OUT, "@pmacCoord.proto sendString $(PORT)")
-  field(FLNK, "$(P):B1:PHASING")
-}
-
-record(stringout, "$(P):B2:PHASE:START") {
-  field(DESC, "phase bragg 2 mtr")
-  field(DTYP, "stream")
-  field(VAL, "enable plc 22")
-  field(OUT, "@pmacCoord.proto sendString $(PORT)")
-  field(FLNK, "$(P):B1:PHASING")
-}
-
-record(ai, "$(P):B1:PHASING") {
-  field(SCAN, "Passive")
-  field(PINI, "NO")
-  field(DTYP, "stream")
-  field(FLNK, "$(P):B2:PHASING")
-  field(INP, "@pmacCoord.proto getVar(M5021) $(PORT)")
-  field(PREC, "0")
-}
-
-record(ai, "$(P):B2:PHASING") {
-  field(SCAN, "Passive")
-  field(PINI, "NO")
-  field(DTYP, "stream")
-  field(INP, "@pmacCoord.proto getVar(M5022) $(PORT)")
-  field(PREC, "0")
-}
-
-record(bo, "$(P):B1:CLK") {
-  field(SCAN, "5 second")
-  field(DTYP, "Soft Channel")
-  field(FLNK, "$(P):B1:PHASING")
-}
-
-record(bi, "$(P):XTAL") {
-  field(DTYP, "Raw Soft Channel")
-  field(ZNAM, "Si(111)")
-  field(ONAM, "Si(311)")
-}
-
-record(ai, "$(P):GET:XTALSPACE") {
-  field(DESC, "Get pmac variable")
-  field(SCAN, "10 second")
-  field(DTYP, "stream")
-  field(FLNK, "$(P):XTALSPACE")
-  field(INP, "@pmacCoord.proto getVar(&$(COORD)Q21) $(PORT)")
-}
-
-record(calcout, "$(P):XTALSPACE") {
-  field(SCAN, "Passive")
-  field(PINI, "NO")
-  field(DTYP, "Soft Channel")
-  field(CALC, "A>3?0:1")
-  field(INPA, "$(P):GET:XTALSPACE")
-  field(OUT, "$(P):XTAL.RVAL PP")
-  field(OOPT, "Every Time")
-  field(DOPT, "Use CALC")
-  field(PREC, "9")
-}
-
-record(stringout, "$(P):MSCLRF0") {
-  field(DESC, "Send MSCLRF0 cmd")
-  field(SCAN, "Passive")
-  field(DTYP, "stream")
-  field(VAL, "MSCLRF0")
-  field(OUT, "@pmacCoord.proto sendString $(PORT)")
-}
-
-record(bo, "$(P):SETXTAL") {
-  field(VAL, "0")
-  field(ZNAM, "Si(111)")
-  field(ONAM, "Si(311)")
-  field(DESC, "set xtal type")
-  field(FLNK, "$(P):XTAL:SPACING")
-  field(PINI, "YES")
-}
-
-record(calcout, "$(P):XTAL:SPACING") {
-  field(DTYP, "stream")
-  field(CALC, "A=0?B:C")
-  field(INPA, "$(P):SETXTAL")
-  field(INPB, "3.13475")
-  field(INPC, "1.637069796")
-  field(OUT, "@pmacCoord.proto setVar(&$(COORD)Q21) $(PORT)")
-  field(OOPT, "Every Time")
-  field(DOPT, "Use CALC")
-}
-
-record(ao, "$(P):BRAGG1:ACTUAL") {
-  field(DESC, "bragg energy actual")
-  field(OMSL, "supervisory")
-  field(DRVH, "40000")
-  field(DRVL, "-40000")
-  field(EGU, "eV")
-}
-
-record(ao, "$(P):BRAGG2:ACTUAL") {
-  field(DESC, "bragg energy actual")
-  field(OMSL, "supervisory")
-  field(DRVH, "40000")
-  field(DRVL, "-40000")
-  field(EGU, "eV")
-}
-
-record(transform, "$(P):CALC:B2OFF") {
-  field(CLCE, "(D*1000)/(2*C)")
-  field(CLCF, "ASIN(E/A)")
-  field(CLCG, "ASIN(E/B)")
-  field(CLCK, "((G-F)/H)*I*32")
-  field(CLCL, "J+K")
-  field(INPA, "$(P):BRAGG2.RBV")
-  field(INPB, "$(P):BRAGG2:ACTUAL")
-  field(INPC, "$(P):XTAL:SPACING")
-  field(INPD, "12.3985")
-  field(INPH, "$(RADMRES2)")
-  field(INPI, "$(P):B2:ENC1234.MRES")
-  field(INPJ, "$(P):B2:ENC1234.OFF")
-  field(CMTA, "bragg energy readback")
-  field(CMTB, "bragg energy actual")
-  field(CMTC, "xtal spacing d")
-  field(CMTD, "Evlambda")
-  field(CMTE, "(Evlambda*1000)/2d")
-  field(CMTF, "bragg rad readback")
-  field(CMTG, "bragg rad actual")
-  field(CMTH, "RADMRES2")
-  field(CMTI, "B2MRES")
-  field(CMTJ, "B2OFF")
-  field(CMTK, "B2 offset correction")
-  field(CMTL, "new B2OFF")
-  field(DESC, "calc new B2 motor offset")
-  field(OUTL, "$(P):B2:ENC1234.OFF")
-}
-
-record(transform, "$(P):CALC:B1OFF") {
-  field(CLCE, "(D*1000)/(2*C)")
-  field(CLCF, "ASIN(E/A)")
-  field(CLCG, "ASIN(E/B)")
-  field(CLCK, "((G-F)/H)*I*32")
-  field(CLCL, "J+K")
-  field(INPA, "$(P):BRAGG1.RBV")
-  field(INPB, "$(P):BRAGG1:ACTUAL")
-  field(INPC, "$(P):XTAL:SPACING")
-  field(INPD, "12.3985")
-  field(INPH, "$(RADMRES1)")
-  field(INPI, "$(P):B1:ENC1234.MRES")
-  field(INPJ, "$(P):B1:ENC1234.OFF")
-  field(CMTA, "bragg energy readback")
-  field(CMTB, "bragg energy actual")
-  field(CMTC, "xtal spacing d")
-  field(CMTD, "Evlambda")
-  field(CMTE, "(Evlambda*1000)/2d")
-  field(CMTF, "bragg rad readback")
-  field(CMTG, "bragg rad actual")
-  field(CMTH, "RADMRES1")
-  field(CMTI, "B1MRES")
-  field(CMTJ, "B1OFF")
-  field(CMTK, "B1 offset correction")
-  field(CMTL, "new B1OFF")
-  field(DESC, "calc new B1 motor offset")
-  field(OUTL, "$(P):B1:ENC1234.OFF")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(1084,590,1.0)
-#! Record("$(P):ENERGYMODE",1420,646,0,0,"$(P):ENERGYMODE")
-#! Record("$(P):B1:PHASE:START",1420,814,0,1,"$(P):B1:PHASE:START")
-#! Field("$(P):B1:PHASE:START.FLNK",16777215,1,"$(P):B1:PHASE:START.FLNK")
-#! Link("$(P):B1:PHASE:START.FLNK","$(P):B1:PHASING")
-#! Record("$(P):B2:PHASE:START",1420,1014,0,1,"$(P):B2:PHASE:START")
-#! Field("$(P):B2:PHASE:START.FLNK",16777215,1,"$(P):B2:PHASE:START.FLNK")
-#! Link("$(P):B2:PHASE:START.FLNK","$(P):B1:PHASING")
-#! Record("$(P):B1:PHASING",1680,900,0,0,"$(P):B1:PHASING")
-#! Field("$(P):B1:PHASING.FLNK",16777215,1,"$(P):B1:PHASING.FLNK")
-#! Link("$(P):B1:PHASING.FLNK","$(P):B2:PHASING")
-#! Record("$(P):B2:PHASING",1700,1094,0,1,"$(P):B2:PHASING")
-#! Record("$(P):B1:CLK",1420,1182,0,1,"$(P):B1:CLK")
-#! Field("$(P):B1:CLK.FLNK",16777215,1,"$(P):B1:CLK.FLNK")
-#! Link("$(P):B1:CLK.FLNK","$(P):B1:PHASING")
-#! Record("$(P):XTAL",420,862,0,1,"$(P):XTAL")
-#! Field("$(P):XTAL.RVAL",16777215,1,"$(P):XTAL.RVAL")
-#! Record("$(P):GET:XTALSPACE",400,1014,0,0,"$(P):GET:XTALSPACE")
-#! Field("$(P):GET:XTALSPACE.FLNK",16777215,0,"$(P):GET:XTALSPACE.FLNK")
-#! Link("$(P):GET:XTALSPACE.FLNK","$(P):XTALSPACE")
-#! Field("$(P):GET:XTALSPACE.VAL",16777215,1,"$(P):GET:XTALSPACE.VAL")
-#! Record("$(P):XTALSPACE",380,519,0,0,"$(P):XTALSPACE")
-#! Field("$(P):XTALSPACE.INPA",16777215,1,"$(P):XTALSPACE.INPA")
-#! Link("$(P):XTALSPACE.INPA","$(P):GET:XTALSPACE.VAL")
-#! Field("$(P):XTALSPACE.OUT",16777215,1,"$(P):XTALSPACE.OUT")
-#! Link("$(P):XTALSPACE.OUT","$(P):XTAL.RVAL")
-#! Record("$(P):MSCLRF0",1680,654,0,1,"$(P):MSCLRF0")
-#! Record("$(P):SETXTAL",700,700,0,1,"$(P):SETXTAL")
-#! Field("$(P):SETXTAL.FLNK",16777215,1,"$(P):SETXTAL.FLNK")
-#! Link("$(P):SETXTAL.FLNK","$(P):XTAL:SPACING")
-#! Field("$(P):SETXTAL.VAL",16777215,1,"$(P):SETXTAL.VAL")
-#! Record("$(P):XTAL:SPACING",980,692,0,0,"$(P):XTAL:SPACING")
-#! Field("$(P):XTAL:SPACING.INPA",16777215,0,"$(P):XTAL:SPACING.INPA")
-#! Link("$(P):XTAL:SPACING.INPA","$(P):SETXTAL.VAL")
-#! Field("$(P):XTAL:SPACING.VAL",16777215,1,"$(P):XTAL:SPACING.VAL")
-#! Record("$(P):BRAGG1:ACTUAL",480,1234,0,1,"$(P):BRAGG1:ACTUAL")
-#! Field("$(P):BRAGG1:ACTUAL.VAL",16777215,0,"$(P):BRAGG1:ACTUAL.VAL")
-#! Record("$(P):BRAGG2:ACTUAL",980,1234,0,1,"$(P):BRAGG2:ACTUAL")
-#! Field("$(P):BRAGG2:ACTUAL.VAL",16777215,0,"$(P):BRAGG2:ACTUAL.VAL")
-#! Record("$(P):CALC:B2OFF",1220,1143,0,0,"$(P):CALC:B2OFF")
-#! Field("$(P):CALC:B2OFF.INPA",16777215,1,"$(P):CALC:B2OFF.INPA")
-#! Field("$(P):CALC:B2OFF.INPB",16777215,0,"$(P):CALC:B2OFF.INPB")
-#! Link("$(P):CALC:B2OFF.INPB","$(P):BRAGG2:ACTUAL.VAL")
-#! Field("$(P):CALC:B2OFF.INPC",16777215,0,"$(P):CALC:B2OFF.INPC")
-#! Link("$(P):CALC:B2OFF.INPC","$(P):XTAL:SPACING.VAL")
-#! Field("$(P):CALC:B2OFF.INPH",16777215,1,"$(P):CALC:B2OFF.INPH")
-#! Field("$(P):CALC:B2OFF.INPI",16777215,1,"$(P):CALC:B2OFF.INPI")
-#! Field("$(P):CALC:B2OFF.INPJ",16777215,1,"$(P):CALC:B2OFF.INPJ")
-#! Field("$(P):CALC:B2OFF.OUTL",16777215,1,"$(P):CALC:B2OFF.OUTL")
-#! Record("$(P):CALC:B1OFF",740,1143,0,0,"$(P):CALC:B1OFF")
-#! Field("$(P):CALC:B1OFF.INPA",16777215,1,"$(P):CALC:B1OFF.INPA")
-#! Field("$(P):CALC:B1OFF.INPB",16777215,0,"$(P):CALC:B1OFF.INPB")
-#! Link("$(P):CALC:B1OFF.INPB","$(P):BRAGG1:ACTUAL.VAL")
-#! Field("$(P):CALC:B1OFF.INPC",16777215,1,"$(P):CALC:B1OFF.INPC")
-#! Link("$(P):CALC:B1OFF.INPC","$(P):XTAL:SPACING.VAL")
-#! Field("$(P):CALC:B1OFF.INPH",16777215,1,"$(P):CALC:B1OFF.INPH")
-#! Field("$(P):CALC:B1OFF.INPI",16777215,1,"$(P):CALC:B1OFF.INPI")
-#! Field("$(P):CALC:B1OFF.INPJ",16777215,1,"$(P):CALC:B1OFF.INPJ")
-#! Field("$(P):CALC:B1OFF.OUTL",16777215,1,"$(P):CALC:B1OFF.OUTL")
diff --git a/pmacCoordApp/Db/zform.db b/pmacCoordApp/Db/zform.db
new file mode 100644
index 0000000..520809b
--- /dev/null
+++ b/pmacCoordApp/Db/zform.db
@@ -0,0 +1,100 @@
+#! Generated by VisualDCT v2.6
+#! DBDSTART
+#! DBD("../../dbd/pmacCoord_vdct.dbd")
+#! DBDEND
+
+# # \file
+# # optical light focussing for Cyrille
+# % macro, P, Pv Prefix
+# % macro, PORT, Motor controller serial port
+# % macro, name, Object name and gui association name
+# This associates an edm screen with the template
+# % gui, $(name=), edm, zform.edl, zform=$(P)
+record(fanout, "$(P):ZERO") {
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
+  macro(VAR, "P1730")
+  macro(Q, ":OFFSETD")
+  macro(EGU, "mm")
+  macro(PREC, "3")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
+  macro(VAR, "P1731")
+  macro(Q, ":OFFSETM3")
+  macro(EGU, "deg")
+  macro(PREC, "4")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
+  macro(VAR, "P1732")
+  macro(Q, ":OFFSETM4")
+  macro(EGU, "deg")
+  macro(PREC, "4")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync4) {
+  macro(VAR, "P1733")
+  macro(Q, ":ANGLEM5")
+  macro(EGU, "deg")
+  macro(PREC, "4")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync5) {
+  macro(VAR, "P1734")
+  macro(Q, ":DISTM3M5")
+  macro(EGU, "mm")
+  macro(PREC, "3")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync6) {
+  macro(VAR, "P1735")
+  macro(Q, ":XHOMEOFFSET")
+  macro(EGU, "mm")
+  macro(PREC, "3")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync7) {
+  macro(VAR, "P1736")
+  macro(Q, ":YHOMEOFFSET")
+  macro(EGU, "deg")
+  macro(PREC, "4")
+}
+
+expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync8) {
+  macro(VAR, "P1737")
+  macro(Q, ":ZHOMEOFFSET")
+  macro(EGU, "deg")
+  macro(PREC, "4")
+}
+
+#! Further lines contain data used by VisualDCT
+#! View(0,188,1.0)
+
+#! TemplateInstance("pmacVariableWriteSync1",200,380,0,"")
+#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync2",420,380,0,"")
+#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
+
+
+#! TemplateInstance("pmacVariableWriteSync3",640,380,0,"")
+#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
+#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
+
diff --git a/pmacCoordApp/Db/zform.vdb b/pmacCoordApp/Db/zform.vdb
deleted file mode 100644
index 520809b..0000000
--- a/pmacCoordApp/Db/zform.vdb
+++ /dev/null
@@ -1,100 +0,0 @@
-#! Generated by VisualDCT v2.6
-#! DBDSTART
-#! DBD("../../dbd/pmacCoord_vdct.dbd")
-#! DBDEND
-
-# # \file
-# # optical light focussing for Cyrille
-# % macro, P, Pv Prefix
-# % macro, PORT, Motor controller serial port
-# % macro, name, Object name and gui association name
-# This associates an edm screen with the template
-# % gui, $(name=), edm, zform.edl, zform=$(P)
-record(fanout, "$(P):ZERO") {
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync1) {
-  macro(VAR, "P1730")
-  macro(Q, ":OFFSETD")
-  macro(EGU, "mm")
-  macro(PREC, "3")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync2) {
-  macro(VAR, "P1731")
-  macro(Q, ":OFFSETM3")
-  macro(EGU, "deg")
-  macro(PREC, "4")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync3) {
-  macro(VAR, "P1732")
-  macro(Q, ":OFFSETM4")
-  macro(EGU, "deg")
-  macro(PREC, "4")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync4) {
-  macro(VAR, "P1733")
-  macro(Q, ":ANGLEM5")
-  macro(EGU, "deg")
-  macro(PREC, "4")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync5) {
-  macro(VAR, "P1734")
-  macro(Q, ":DISTM3M5")
-  macro(EGU, "mm")
-  macro(PREC, "3")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync6) {
-  macro(VAR, "P1735")
-  macro(Q, ":XHOMEOFFSET")
-  macro(EGU, "mm")
-  macro(PREC, "3")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync7) {
-  macro(VAR, "P1736")
-  macro(Q, ":YHOMEOFFSET")
-  macro(EGU, "deg")
-  macro(PREC, "4")
-}
-
-expand("pmacVariableWriteSync.vdb", pmacVariableWriteSync8) {
-  macro(VAR, "P1737")
-  macro(Q, ":ZHOMEOFFSET")
-  macro(EGU, "deg")
-  macro(PREC, "4")
-}
-
-#! Further lines contain data used by VisualDCT
-#! View(0,188,1.0)
-
-#! TemplateInstance("pmacVariableWriteSync1",200,380,0,"")
-#! TemplateField("pmacVariableWriteSync1","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync1","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync2",420,380,0,"")
-#! TemplateField("pmacVariableWriteSync2","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync2","PREC",16777215,0,1)
-
-
-#! TemplateInstance("pmacVariableWriteSync3",640,380,0,"")
-#! TemplateField("pmacVariableWriteSync3","EGU",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","VAR",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","Q",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","P",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PORT",16777215,0,1)
-#! TemplateField("pmacVariableWriteSync3","PREC",16777215,0,1)
-
-- 
2.1.4

